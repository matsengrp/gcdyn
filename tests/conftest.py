import os
import sys
import pytest
from Bio import SeqIO


@pytest.fixture
def seq_list():
    seqs = [
        "GAGGTGCAGCTTCAGGAGTCAGGACCTAACCTCGTGAAACCTTCTCAGACTCTGTCCCTCACCTGTTCTGTCACAGGCGACTCCATCACCAGTGGTTACTGGAACTGGATCCGGAAATTCCCAGGGAATAAACTTGAGTACATGGGGTACATAAGCTACAGTGGTAGCACTTACTACAATCCATCTCTCAAAAGTCGAATCTCCATCACTCGAGACACATCCAAGAATCAGTACTACCTGAAGTTGAATTCTGTGACTACTGAGGACACAGCCTCATACTACTGTGGAAGGGACTTCGATGTCTGGGGCGCAGGGACCACGGTCATCGTCTCCTCAGACATTGTGATGACTCAGTCTCAAAAATTCATGTCCACATCAGTAGGAGACAGGGTCAGCGTCACCTGCAAGGCCAGTCAGAATGTGGGTACTAATGTAGCCTGGTATCAACAGAAACCAGGGCAATCTCCTAAAGCACTGATTTACTCGGCATCCTACAGGTACAGTGGAGTCCCTGATCGCTTCACAGGCAGTGGATCTGGGACAGATTTCACTCTCACCATCAGCAATGTGCAGTCTGAAGACTTGGCAGAGTATTTCTGTCACCAATATAGCAGCTATCCTCTCACGTTCGGCTCGGGGACTAAGCTAGAAATAAAA",
        "GAGGTGCAGCTTCAGGAGTCAGGACCTAGCCTCGTGAAACCTTCTCAGACTCTGTCCCTCACCTGTTCTGTCACTGGCGACTCCATCACCAGTGGTTACTGGAACTGGATCCGGAAATTCCCAGGGAATAAACTTGAGTACATGGGGTACATAAGCTACAGTGGTCGCACTTACTACAATCCATCTCTCATAAGTCGAATCTCCATCACTCGAGACACATCCAAGAACCAGTACTACCTGCAGTTGAATTCTGTGACTACTGAGGACACAGCCACATATTACTGTGGAAGGGACTTCGATGTCTGGGGCGCAGGGACCACGGTCACCGTCTCCTCAGACATTGTGATGACTCAGTCTCAAAAATTCATGTCCACATCAGTAGGAGACAGGGTCAGCGTCACCTGCAAGGCCAGTCAGAATGTGGGTACTAATGTAGCCTGGTATCAACAGAAACCAGGGCAATCTCCTAAAGCACTGATTTACTCGGCATCCTACAGGTACAGTGGAGTCCCTGATCGCTTCACAGGCAGTGGATCTGGGACAGATTTCACTCTCACCATCAGCAATGTGCAGTCTGAAGACTTGGCAGAGTATTTCTGTCAGCAATATAACAGCTATCCTCTCACGTTCGGCTCGGGGACTAAGCTAGAAATAAAA",
        "GAGGTGCAGCTTCAGGAGTCAGGACCTAGCCTCGTGAAACCTTCTCAGACTCTGTCCCTCACCTGTTCTGTCACTGGCGACTCCATCACCAGTGGTTACTGGAACTGGATCCGGAAATTCCCAGGGAATAAACTTGAGTACATGGGGTACATAAGCTACAGTGGTAACACTTACTACAATCCATCTCTCAAAAGTCGAATCTCCATCACTCGAGACACATCCAAGAACCAGTACTACCTGCAGTTGAATTCTGTGACTACTGAGGACACAGCCACATATTACTGTGCAAGGGACTTCGATGTCTGGGGCGCAGGGACCACGGTCACCGTCTCCTCAGACATTGTGATGACTCAGTCTCAAAAATTCATGTCCACATCAGTAGGAGACAGGGTCAGCGTCACCTGCAAGGCCAGTCAGAATGTGGGTACTAATGTAGCCTGGTATCAACAGAAACCAGGACAATCTCCTAGATCACTGATTTACTCGGCATCCTACAGGTACAGTGGAGTCCCTGATCGCTTCACAGGCAGTGGATCTGGGACAGATTTCACTCTCACCATCAGCAATGTGCAGTCTGAAGACTTGGCCGAGTATTTCTGTCATCAATATAGCAGCTATCCTCTCACGTTCGGCTCGGGGACTAAGCTAGAAATAAAA",
    ]

    return seqs


# TODO Will can you double check this?
@pytest.fixture
def replay_naive():
    return "GAGGTGCAGCTTCAGGAGTCAGGACCTAGCCTCGTGAAACCTTCTCAGACTCTGTCCCTCACCTGTTCTGTCACTGGCGACTCCATCACCAGTGGTTACTGGAACTGGATCCGGAAATTCCCAGGGAATAAACTTGAGTACATGGGGTACATAAGCTACAGTGGTAGCACTTACTACAATCCATCTCTCAAAAGTCGAATCTCCATCACTCGAGACACATCCAAGAACCAGTACTACCTGCAGTTGAATTCTGTGACTACTGAGGACACAGCCACATATTACTGTGCAAGGGACTTCGATGTCTGGGGCGCAGGGACCACGGTCACCGTCTCCTCAGACATTGTGATGACTCAGTCTCAAAAATTCATGTCCACATCAGTAGGAGACAGGGTCAGCGTCACCTGCAAGGCCAGTCAGAATGTGGGTACTAATGTAGCCTGGTATCAACAGAAACCAGGGCAATCTCCTAAAGCACTGATTTACTCGGCATCCTACAGGTACAGTGGAGTCCCTGATCGCTTCACAGGCAGTGGATCTGGGACAGATTTCACTCTCACCATCAGCAATGTGCAGTCTGAAGACTTGGCAGAGTATTTCTGTCAGCAATATAACAGCTATCCTCTCACGTTCGGCTCGGGGACTAAGCTAGAAATAAAA"


@pytest.fixture
def seq_list_big():
    seqs = [
        str(seq_record.seq)
        for seq_record in SeqIO.parse(
            "notebooks/gcreplay_samples/gctree_PR1.2-5-LP-78-GC.fasta", "fasta"
        )
        if seq_record.id != "naive"
    ]
    return seqs


@pytest.fixture
def gcdyn_data_dir():
    return os.path.join(os.path.dirname(sys.modules["gcdyn"].__file__), "data")


@pytest.fixture
def MK_RS5NF_mutability_path(gcdyn_data_dir):
    return os.path.join(gcdyn_data_dir, "MK_RS5NF_mutability.csv")


@pytest.fixture
def MK_RS5NF_substitution_path(gcdyn_data_dir):
    return os.path.join(gcdyn_data_dir, "MK_RS5NF_substitution.csv")


# pkgutil.get_data("gcdyn", 'data/MK_RS5NF_mutability.csv')

# with importlib.resources.path('gcdyn', 'MK_RS5NF_mutability.csv') as data_path:
#     print(data_path)
#
#
# import pkgutil
# import pkg_resources
#
# print(os.path.join(d, 'data/MK_RS5NF_mutability.csv'))
#
# d = os.path.dirname(sys.modules["gcdyn"].__file__)
# print(os.path.join(d, 'data/MK_RS5NF_mutability.csv'))
