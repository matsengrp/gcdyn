Search.setIndex({"docnames": ["_autosummary/experiments.replay", "_autosummary/experiments.replay.CHAIN_2_START_IDX", "_autosummary/experiments.replay.NAIVE_SEQUENCE", "_autosummary/experiments.replay.dms", "_autosummary/experiments.replay.mutability", "_autosummary/experiments.replay.substitution", "_autosummary/gcdyn.bdms", "_autosummary/gcdyn.bdms.TreeNode", "_autosummary/gcdyn.bdms.sample_trees", "_autosummary/gcdyn.encode", "_autosummary/gcdyn.encode.encode_tree", "_autosummary/gcdyn.encode.encode_trees", "_autosummary/gcdyn.encode.pad_trees", "_autosummary/gcdyn.encode.read_trees", "_autosummary/gcdyn.encode.scale_tree", "_autosummary/gcdyn.encode.simfn", "_autosummary/gcdyn.encode.trivialize_encodings", "_autosummary/gcdyn.encode.write_training_files", "_autosummary/gcdyn.encode.write_trees", "_autosummary/gcdyn.fitness", "_autosummary/gcdyn.fitness.Fitness", "_autosummary/gcdyn.gpmap", "_autosummary/gcdyn.gpmap.AdditiveGPMap", "_autosummary/gcdyn.gpmap.ConstantGPMap", "_autosummary/gcdyn.gpmap.GPMap", "_autosummary/gcdyn.models", "_autosummary/gcdyn.models.BirthDeathModel", "_autosummary/gcdyn.models.naive_log_likelihood", "_autosummary/gcdyn.models.stadler_appx_log_likelihood", "_autosummary/gcdyn.models.stadler_full_log_likelihood", "_autosummary/gcdyn.models.stadler_full_log_likelihood_scipy", "_autosummary/gcdyn.mutators", "_autosummary/gcdyn.mutators.AttrMutator", "_autosummary/gcdyn.mutators.ContextMutator", "_autosummary/gcdyn.mutators.DiscreteMutator", "_autosummary/gcdyn.mutators.GaussianMutator", "_autosummary/gcdyn.mutators.KdeMutator", "_autosummary/gcdyn.mutators.Mutator", "_autosummary/gcdyn.mutators.SequenceMutator", "_autosummary/gcdyn.mutators.SequencePhenotypeMutator", "_autosummary/gcdyn.mutators.UniformMutator", "_autosummary/gcdyn.nn", "_autosummary/gcdyn.nn.BundleMeanLayer", "_autosummary/gcdyn.nn.Callback", "_autosummary/gcdyn.nn.NeuralNetworkModel", "_autosummary/gcdyn.poisson", "_autosummary/gcdyn.poisson.ConstantResponse", "_autosummary/gcdyn.poisson.ExponentialResponse", "_autosummary/gcdyn.poisson.HomogeneousResponse", "_autosummary/gcdyn.poisson.ModulatedPhenotypeResponse", "_autosummary/gcdyn.poisson.ModulatedRateResponse", "_autosummary/gcdyn.poisson.PhenotypeResponse", "_autosummary/gcdyn.poisson.PhenotypeTimeResponse", "_autosummary/gcdyn.poisson.Response", "_autosummary/gcdyn.poisson.SequenceContextMutationResponse", "_autosummary/gcdyn.poisson.SigmoidResponse", "_autosummary/gcdyn.poisson.SoftReluResponse", "_autosummary/gcdyn.poisson.set_backend", "_autosummary/gcdyn.utils", "_autosummary/gcdyn.utils.addfn", "_autosummary/gcdyn.utils.arglist_imatches", "_autosummary/gcdyn.utils.arglist_index", "_autosummary/gcdyn.utils.color", "_autosummary/gcdyn.utils.color_mutants", "_autosummary/gcdyn.utils.insert_in_arglist", "_autosummary/gcdyn.utils.is_in_arglist", "_autosummary/gcdyn.utils.isclose", "_autosummary/gcdyn.utils.ladderize_tree", "_autosummary/gcdyn.utils.limit_procs", "_autosummary/gcdyn.utils.make_dl_plots", "_autosummary/gcdyn.utils.make_html", "_autosummary/gcdyn.utils.memory_usage_fraction", "_autosummary/gcdyn.utils.mpl_init", "_autosummary/gcdyn.utils.node_contexts", "_autosummary/gcdyn.utils.padded_fivemer_contexts_of_paired_sequences", "_autosummary/gcdyn.utils.plot_chosen_params", "_autosummary/gcdyn.utils.plot_phenotype_response", "_autosummary/gcdyn.utils.plot_responses", "_autosummary/gcdyn.utils.plot_tree_slices", "_autosummary/gcdyn.utils.random_transition_matrix", "_autosummary/gcdyn.utils.remove_from_arglist", "_autosummary/gcdyn.utils.replace_in_arglist", "_autosummary/gcdyn.utils.simple_fivemer_contexts", "_autosummary/gcdyn.utils.write_leaf_sequences_to_fasta", "api", "argparse", "cite", "developer", "experiments", "index", "install", "notebooks/bdms_inhomogeneous", "notebooks/bdms_replay", "notebooks/inference/birth_death/inference-demo", "notebooks/inference/birth_death/mcmc/geweke_test_analysis", "notebooks/inference/birth_death/mcmc/mcmc-demo", "notebooks/inference/birth_death/mle_convergence", "notebooks/inference/deep_learning/experiment", "notebooks/models_of_t_cell_help", "notebooks/test_seq_to_fitness", "notebooks/trees_with_replay_fitness", "todo"], "filenames": ["_autosummary/experiments.replay.rst", "_autosummary/experiments.replay.CHAIN_2_START_IDX.rst", "_autosummary/experiments.replay.NAIVE_SEQUENCE.rst", "_autosummary/experiments.replay.dms.rst", "_autosummary/experiments.replay.mutability.rst", "_autosummary/experiments.replay.substitution.rst", "_autosummary/gcdyn.bdms.rst", "_autosummary/gcdyn.bdms.TreeNode.rst", "_autosummary/gcdyn.bdms.sample_trees.rst", "_autosummary/gcdyn.encode.rst", "_autosummary/gcdyn.encode.encode_tree.rst", "_autosummary/gcdyn.encode.encode_trees.rst", "_autosummary/gcdyn.encode.pad_trees.rst", "_autosummary/gcdyn.encode.read_trees.rst", "_autosummary/gcdyn.encode.scale_tree.rst", "_autosummary/gcdyn.encode.simfn.rst", "_autosummary/gcdyn.encode.trivialize_encodings.rst", "_autosummary/gcdyn.encode.write_training_files.rst", "_autosummary/gcdyn.encode.write_trees.rst", "_autosummary/gcdyn.fitness.rst", "_autosummary/gcdyn.fitness.Fitness.rst", "_autosummary/gcdyn.gpmap.rst", "_autosummary/gcdyn.gpmap.AdditiveGPMap.rst", "_autosummary/gcdyn.gpmap.ConstantGPMap.rst", "_autosummary/gcdyn.gpmap.GPMap.rst", "_autosummary/gcdyn.models.rst", "_autosummary/gcdyn.models.BirthDeathModel.rst", "_autosummary/gcdyn.models.naive_log_likelihood.rst", "_autosummary/gcdyn.models.stadler_appx_log_likelihood.rst", "_autosummary/gcdyn.models.stadler_full_log_likelihood.rst", "_autosummary/gcdyn.models.stadler_full_log_likelihood_scipy.rst", "_autosummary/gcdyn.mutators.rst", "_autosummary/gcdyn.mutators.AttrMutator.rst", "_autosummary/gcdyn.mutators.ContextMutator.rst", "_autosummary/gcdyn.mutators.DiscreteMutator.rst", "_autosummary/gcdyn.mutators.GaussianMutator.rst", "_autosummary/gcdyn.mutators.KdeMutator.rst", "_autosummary/gcdyn.mutators.Mutator.rst", "_autosummary/gcdyn.mutators.SequenceMutator.rst", "_autosummary/gcdyn.mutators.SequencePhenotypeMutator.rst", "_autosummary/gcdyn.mutators.UniformMutator.rst", "_autosummary/gcdyn.nn.rst", "_autosummary/gcdyn.nn.BundleMeanLayer.rst", "_autosummary/gcdyn.nn.Callback.rst", "_autosummary/gcdyn.nn.NeuralNetworkModel.rst", "_autosummary/gcdyn.poisson.rst", "_autosummary/gcdyn.poisson.ConstantResponse.rst", "_autosummary/gcdyn.poisson.ExponentialResponse.rst", "_autosummary/gcdyn.poisson.HomogeneousResponse.rst", "_autosummary/gcdyn.poisson.ModulatedPhenotypeResponse.rst", "_autosummary/gcdyn.poisson.ModulatedRateResponse.rst", "_autosummary/gcdyn.poisson.PhenotypeResponse.rst", "_autosummary/gcdyn.poisson.PhenotypeTimeResponse.rst", "_autosummary/gcdyn.poisson.Response.rst", "_autosummary/gcdyn.poisson.SequenceContextMutationResponse.rst", "_autosummary/gcdyn.poisson.SigmoidResponse.rst", "_autosummary/gcdyn.poisson.SoftReluResponse.rst", "_autosummary/gcdyn.poisson.set_backend.rst", "_autosummary/gcdyn.utils.rst", "_autosummary/gcdyn.utils.addfn.rst", "_autosummary/gcdyn.utils.arglist_imatches.rst", "_autosummary/gcdyn.utils.arglist_index.rst", "_autosummary/gcdyn.utils.color.rst", "_autosummary/gcdyn.utils.color_mutants.rst", "_autosummary/gcdyn.utils.insert_in_arglist.rst", "_autosummary/gcdyn.utils.is_in_arglist.rst", "_autosummary/gcdyn.utils.isclose.rst", "_autosummary/gcdyn.utils.ladderize_tree.rst", "_autosummary/gcdyn.utils.limit_procs.rst", "_autosummary/gcdyn.utils.make_dl_plots.rst", "_autosummary/gcdyn.utils.make_html.rst", "_autosummary/gcdyn.utils.memory_usage_fraction.rst", "_autosummary/gcdyn.utils.mpl_init.rst", "_autosummary/gcdyn.utils.node_contexts.rst", "_autosummary/gcdyn.utils.padded_fivemer_contexts_of_paired_sequences.rst", "_autosummary/gcdyn.utils.plot_chosen_params.rst", "_autosummary/gcdyn.utils.plot_phenotype_response.rst", "_autosummary/gcdyn.utils.plot_responses.rst", "_autosummary/gcdyn.utils.plot_tree_slices.rst", "_autosummary/gcdyn.utils.random_transition_matrix.rst", "_autosummary/gcdyn.utils.remove_from_arglist.rst", "_autosummary/gcdyn.utils.replace_in_arglist.rst", "_autosummary/gcdyn.utils.simple_fivemer_contexts.rst", "_autosummary/gcdyn.utils.write_leaf_sequences_to_fasta.rst", "api.rst", "argparse.rst", "cite.rst", "developer.rst", "experiments.rst", "index.rst", "install.rst", "notebooks/bdms_inhomogeneous.ipynb", "notebooks/bdms_replay.ipynb", "notebooks/inference/birth_death/inference-demo.ipynb", "notebooks/inference/birth_death/mcmc/geweke_test_analysis.ipynb", "notebooks/inference/birth_death/mcmc/mcmc-demo.ipynb", "notebooks/inference/birth_death/mle_convergence.ipynb", "notebooks/inference/deep_learning/experiment.ipynb", "notebooks/models_of_t_cell_help.ipynb", "notebooks/test_seq_to_fitness.ipynb", "notebooks/trees_with_replay_fitness.ipynb", "todo.rst"], "titles": ["experiments.replay", "experiments.replay.CHAIN_2_START_IDX", "experiments.replay.NAIVE_SEQUENCE", "experiments.replay.dms", "experiments.replay.mutability", "experiments.replay.substitution", "gcdyn.bdms", "gcdyn.bdms.TreeNode", "gcdyn.bdms.sample_trees", "gcdyn.encode", "gcdyn.encode.encode_tree", "gcdyn.encode.encode_trees", "gcdyn.encode.pad_trees", "gcdyn.encode.read_trees", "gcdyn.encode.scale_tree", "gcdyn.encode.simfn", "gcdyn.encode.trivialize_encodings", "gcdyn.encode.write_training_files", "gcdyn.encode.write_trees", "gcdyn.fitness", "gcdyn.fitness.Fitness", "gcdyn.gpmap", "gcdyn.gpmap.AdditiveGPMap", "gcdyn.gpmap.ConstantGPMap", "gcdyn.gpmap.GPMap", "gcdyn.models", "gcdyn.models.BirthDeathModel", "gcdyn.models.naive_log_likelihood", "gcdyn.models.stadler_appx_log_likelihood", "gcdyn.models.stadler_full_log_likelihood", "gcdyn.models.stadler_full_log_likelihood_scipy", "gcdyn.mutators", "gcdyn.mutators.AttrMutator", "gcdyn.mutators.ContextMutator", "gcdyn.mutators.DiscreteMutator", "gcdyn.mutators.GaussianMutator", "gcdyn.mutators.KdeMutator", "gcdyn.mutators.Mutator", "gcdyn.mutators.SequenceMutator", "gcdyn.mutators.SequencePhenotypeMutator", "gcdyn.mutators.UniformMutator", "gcdyn.nn", "gcdyn.nn.BundleMeanLayer", "gcdyn.nn.Callback", "gcdyn.nn.NeuralNetworkModel", "gcdyn.poisson", "gcdyn.poisson.ConstantResponse", "gcdyn.poisson.ExponentialResponse", "gcdyn.poisson.HomogeneousResponse", "gcdyn.poisson.ModulatedPhenotypeResponse", "gcdyn.poisson.ModulatedRateResponse", "gcdyn.poisson.PhenotypeResponse", "gcdyn.poisson.PhenotypeTimeResponse", "gcdyn.poisson.Response", "gcdyn.poisson.SequenceContextMutationResponse", "gcdyn.poisson.SigmoidResponse", "gcdyn.poisson.SoftReluResponse", "gcdyn.poisson.set_backend", "gcdyn.utils", "gcdyn.utils.addfn", "gcdyn.utils.arglist_imatches", "gcdyn.utils.arglist_index", "gcdyn.utils.color", "gcdyn.utils.color_mutants", "gcdyn.utils.insert_in_arglist", "gcdyn.utils.is_in_arglist", "gcdyn.utils.isclose", "gcdyn.utils.ladderize_tree", "gcdyn.utils.limit_procs", "gcdyn.utils.make_dl_plots", "gcdyn.utils.make_html", "gcdyn.utils.memory_usage_fraction", "gcdyn.utils.mpl_init", "gcdyn.utils.node_contexts", "gcdyn.utils.padded_fivemer_contexts_of_paired_sequences", "gcdyn.utils.plot_chosen_params", "gcdyn.utils.plot_phenotype_response", "gcdyn.utils.plot_responses", "gcdyn.utils.plot_tree_slices", "gcdyn.utils.random_transition_matrix", "gcdyn.utils.remove_from_arglist", "gcdyn.utils.replace_in_arglist", "gcdyn.utils.simple_fivemer_contexts", "gcdyn.utils.write_leaf_sequences_to_fasta", "Modules", "Named Arguments", "Citing <code class=\"docutils literal notranslate\"><span class=\"pre\">gcdyn</span></code>", "Developer tools", "Modules", "gcdyn documentation", "Installation", "Inhomogeneous processes", "Germinal center replay modeling", "Demo of <code class=\"docutils literal notranslate\"><span class=\"pre\">models.py</span></code>", "&lt;no title&gt;", "Posterior inference on a birth-death model", "Assessing MLE convergence", "Train-test split", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "To-do list"], "terms": {"variou": [0, 9, 15, 41, 42], "thing": [0, 7, 85], "relev": [0, 25, 26], "gc": [0, 2, 3, 85, 98, 99, 100], "modul": [0, 6, 7, 42, 45, 49, 50, 89], "attribut": [0, 6, 7, 9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 55, 56, 58, 67], "function": [0, 6, 7, 9, 25, 26, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 85, 92, 98], "naive_sequ": [0, 92], "gaggtgcagcttcaggagtcaggacctagcctcgtgaaaccttctcagactctgtccctcacctgttctgtcactggcgactccatcaccagtggttactggaactggatccggaaattcccagggaataaacttgagtacatggggtacataagctacagtggtagcacttactacaatccatctctcaaaagtcgaatctccatcactcgagacacatccaagaaccagtactacctgcagttgaattctgtgactactgaggacacagccacatattactgtgcaagggacttcgatgtctggggcgcagggaccacggtcaccgtctcctcagacattgtgatgactcagtctcaaaaattcatgtccacatcagtaggagacagggtcagcgtcacctgcaaggccagtcagaatgtgggtactaatgtagcctggtatcaacagaaaccagggcaatctcctaaagcactgatttactcggcatcctacaggtacagtggagtccctgatcgcttcacaggcagtggatctgggacagatttcactctcaccatcagcaatgtgcagtctgaagacttggcagagtatttctgtcagcaatataacagctatcctctcacgttcggctcggggactaagctagaaataaaa": [0, 2], "The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 25, 26, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 74, 83, 98, 99, 101], "naiv": [0, 1, 2, 4, 5, 58, 83, 92, 98, 99, 100], "sequenc": [0, 1, 2, 4, 5, 6, 8, 19, 20, 21, 22, 23, 24, 31, 33, 38, 39, 40, 42, 45, 54, 58, 74, 82, 83, 85, 92, 98, 100], "us": [0, 2, 3, 6, 7, 8, 9, 10, 19, 20, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 94, 98, 99], "chain_2_start_idx": [0, 58, 74, 92], "336": [0, 1, 98, 99, 100], "index": [0, 1, 21, 22, 31, 33, 41, 42, 43, 58, 74, 85, 87, 89], "first": [0, 1, 6, 7, 9, 10, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 98], "nucleotid": [0, 1, 31, 33, 58, 74, 82], "light": [0, 1, 19], "chain": [0, 1, 58, 74, 95], "mutabl": [0, 31, 33, 39, 45, 54, 85, 92], "fname": [0, 3, 4, 5, 58, 59, 70, 75, 76], "mk_rs5nf_mutabl": [0, 4, 98, 100], "csv": [0, 3, 4, 5, 9, 17, 85, 94, 98, 99, 100], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "each": [0, 3, 4, 6, 7, 8, 9, 11, 19, 20, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 66, 67, 74, 85, 98], "posit": [0, 4, 7, 41, 42, 94, 98], "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 16, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 74, 82, 83, 85, 94, 95, 96], "str": [0, 3, 4, 5, 6, 7, 19, 20, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 58, 74, 82, 83, 97, 98, 99, 100], "file": [0, 3, 4, 5, 6, 7, 9, 15, 17, 58, 70, 83, 85], "read": [0, 3, 4, 5], "from": [0, 3, 4, 5, 6, 7, 8, 19, 20, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 85, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100], "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 66, 91, 95, 99], "type": [0, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 94], "seri": [0, 4, 19, 20, 31, 33, 45, 54], "substitut": [0, 31, 33, 92], "mk_rs5nf_substitut": [0, 5, 98, 100], "matrix": [0, 5, 7, 25, 29, 30, 31, 34, 42], "datafram": [0, 3, 5, 19, 20, 21, 22, 31, 33, 97, 98, 99, 100], "dm": [0, 92, 98, 100], "http": [0, 3, 7, 25, 28, 29, 30, 41, 42, 44, 58, 67, 98, 99, 100], "media": [0, 3], "githubusercont": [0, 3, 98, 99, 100], "com": [0, 3, 7, 98, 99, 100], "jbloomlab": [0, 3, 98, 99, 100], "ab": [0, 3, 42, 98, 99, 100], "cggnaive_dm": [0, 3, 98, 99, 100], "main": [0, 3, 87, 98, 99, 100], "result": [0, 3, 6, 7, 41, 42, 43, 85, 93, 96, 97], "final_variant_scor": [0, 3], "cache_fnam": [0, 3], "home": [0, 3, 85, 101], "runner": [0, 3, 85, 101], "work": [0, 3, 7, 42, 85, 101], "gcdyn": [0, 3, 85, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "debug": [0, 3, 9, 12, 16, 58, 66, 68, 71, 85], "fals": [0, 3, 6, 7, 9, 10, 12, 16, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 58, 64, 66, 68, 70, 71, 80, 81, 85, 91, 92, 94, 97, 100], "data": [0, 3, 7, 31, 36, 41, 43, 94, 98, 99, 100], "local": [0, 3, 31, 33, 45, 54, 87], "path": [0, 3, 7, 58, 83], "which": [0, 3, 6, 7, 31, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 74, 85, 98], "copi": [0, 3, 7, 42], "If": [0, 3, 6, 7, 8, 9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85], "present": [0, 3, 7, 58, 67], "we": [0, 3, 6, 7, 9, 16, 42, 58, 67, 85, 91], "thi": [0, 3, 6, 7, 9, 10, 21, 23, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 85, 87, 93, 94, 95, 96, 98], "dict": [0, 3, 7, 25, 26, 41, 42, 43, 100], "A": [0, 3, 6, 7, 8, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 74, 82, 83, 94], "dictionari": [0, 3, 7, 25, 26, 42], "three": [0, 3, 98, 100], "phenotyp": [0, 3, 6, 8, 19, 20, 22, 24, 31, 39, 45, 46, 47, 49, 50, 51, 52, 55, 56, 92, 98, 99, 100], "i": [6, 7, 9, 10, 14, 16, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 66, 67, 85, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101], "defin": [6, 7, 21, 31, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "follow": [6, 7, 41, 42, 58, 67, 94], "delta": [6, 7, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 98], "t": [6, 7, 19, 20, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 85, 91, 92, 93, 94, 95, 96, 98, 99, 100], "run": [6, 41, 42, 43, 58, 68, 85, 87, 94], "time": [6, 7, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 85, 92, 93, 94, 95, 96], "lambda": [6, 7, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 94, 95, 97], "x": [6, 7, 9, 10, 31, 32, 34, 35, 36, 39, 42, 45, 46, 47, 49, 50, 51, 52, 55, 56, 58, 67, 85, 91, 92, 95, 97, 98, 99, 100], "rate": [6, 7, 19, 20, 25, 26, 28, 29, 30, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 94, 95, 96], "mu": [6, 45, 94], "gamma": [6, 45, 94, 95], "mathcal": [6, 31], "p": [6, 7, 8, 31], "mid": [6, 31, 98], "transit": [6, 25, 29, 30], "densiti": [6, 31, 32, 33, 34, 35, 36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 94, 95], "condit": [6, 7], "initi": [6, 7, 8, 9, 10, 14, 19, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 93, 96], "draw": [6, 7], "gener": [6, 7, 8, 19, 20, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 74, 87], "effect": [6, 7, 21, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92], "when": [6, 7, 9, 10, 31, 32, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85], "event": [6, 7, 31, 32, 33, 34, 35, 36, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92], "occur": [6, 7, 25, 28, 58, 67], "rho": [6, 94], "probabl": [6, 7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 98], "surviv": [6, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "lineag": [6, 7, 25, 28, 29, 30], "after": [6, 7, 31, 39, 42, 93, 95], "": [6, 7, 31, 33, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 68, 85, 87, 95, 96, 98], "primari": 6, "class": [6, 7, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "treenod": [6, 8, 9, 14, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 83, 91, 92, 98], "subclass": [6, 7, 41, 42, 43, 45, 52], "et": [6, 7, 9, 10, 41, 44, 58, 67, 87], "ete3": [6, 7, 25, 26, 31, 32, 34, 35, 36, 37, 38, 39, 40, 92, 98, 100], "notabl": 6, "differ": [6, 7, 42, 96, 99], "mathbb": [6, 45, 46, 51, 52], "r": [6, 45, 46, 51, 52, 91, 95, 96], "_": [6, 45, 52, 94], "ge": [6, 45, 52], "0": [6, 7, 8, 9, 16, 19, 20, 21, 22, 25, 29, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 69, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "node": [6, 7, 8, 9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 73, 92, 93, 95, 96, 98, 100], "n_mutat": [6, 7], "number": [6, 7, 8, 9, 10, 19, 20, 25, 26, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 68, 85, 91, 93, 95, 96, 98, 99, 100], "branch": [6, 7, 9, 11, 14, 87, 92], "abov": [6, 7, 41, 42, 87], "method": [6, 7, 19, 20, 22, 23, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 94, 99], "evolv": [6, 7, 8, 85, 91, 92, 94], "tree": [6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 78, 83, 85, 91, 92, 94, 96, 97, 100], "ad": [6, 7, 42], "accord": [6, 7, 31, 33, 94], "sample_survivor": [6, 7, 8, 91, 92], "subset": 6, "leav": [6, 7, 9, 10, 58, 67, 83, 85], "prune": [6, 7, 25, 27, 28, 29, 30, 91, 92, 93, 95, 100], "subtre": [6, 7, 58, 67, 92], "induc": 6, "overrid": [6, 41, 42, 43, 85, 94], "render": [6, 7, 91, 92, 98, 100], "visual": [6, 7], "kwarg": [6, 7, 8, 21, 24, 31, 32, 37, 38, 40, 41, 42, 45, 48, 51, 52, 53], "base": [6, 7, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92], "float": [6, 7, 9, 10, 11, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 98, 99], "ani": [6, 7, 25, 26, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 85, 87], "keyword": [6, 7, 8, 25, 26, 41, 42], "argument": [6, 7, 8, 25, 26, 41, 42, 43, 58, 67, 89, 94], "pass": [6, 7, 8, 9, 10, 25, 26, 41, 42, 43, 44], "zero": [6, 7, 9, 12, 25, 29, 30, 41, 42], "unless": [6, 7, 42], "ha": [6, 7, 9, 10, 25, 27, 28, 29, 30, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 87, 94, 98], "been": [6, 7, 9, 10, 25, 27, 28, 29, 30, 42, 87, 98], "remov": [6, 7, 92, 98, 99], "birth_respons": [6, 7, 25, 27, 28, 29, 30, 91, 92, 93, 94, 95, 96], "constantrespons": [6, 7, 45, 91, 92, 93, 95, 96, 97], "valu": [6, 7, 9, 16, 19, 20, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 58, 67, 85, 94, 96, 97, 98, 99], "1": [6, 7, 8, 9, 10, 14, 19, 20, 25, 28, 29, 30, 31, 35, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 68, 76, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "death_respons": [6, 7, 25, 27, 28, 29, 30, 91, 92, 93, 94, 95, 96], "mutation_respons": [6, 7, 25, 27, 28, 29, 30, 91, 92, 93, 95, 96], "gaussianmut": [6, 7, 31, 91], "attr": [6, 7, 31, 32, 33, 34, 35, 36, 38, 39, 40, 58, 67], "shift": [6, 7, 31, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91], "scale": [6, 7, 9, 11, 14, 31, 35, 45, 54, 85, 91, 95, 98], "birth_mut": [6, 7, 91, 92], "min_survivor": [6, 7, 85, 91, 92, 93, 95, 96], "capac": [6, 7, 85, 91, 92], "1000": [6, 7, 91, 92, 95], "capacity_method": [6, 7, 92], "none": [6, 7, 8, 9, 10, 11, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 69, 70, 75, 76, 79, 81, 83, 85, 91, 92, 96, 100], "init_popul": [6, 7, 92], "seed": [6, 7, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 85, 91, 92, 93, 95, 96], "verbos": [6, 7, 41, 43, 85, 92], "durat": [6, 7, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "unit": [6, 7, 45, 54, 98], "respons": [6, 7, 9, 16, 17, 25, 26, 29, 30, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 77, 85, 89, 92, 95, 97], "offspr": [6, 7], "true": [6, 7, 8, 9, 10, 11, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 57, 58, 66, 91, 92, 93, 94, 95, 96, 98, 100], "bool": [6, 7, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 58, 83], "flag": [6, 7, 58, 83], "indic": [6, 7, 41, 42], "whether": [6, 7, 8, 41, 42], "should": [6, 7, 9, 10, 25, 26, 41, 42, 43, 44], "int": [6, 7, 8, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 74, 97, 99], "minimum": [6, 7, 98], "survivor": [6, 7, 25, 27, 28, 29, 30, 85, 91, 92, 93, 95, 96], "finish": [6, 7, 31, 32, 34, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56], "fewer": [6, 7], "than": [6, 7, 9, 10, 42, 58, 66, 68, 91, 93, 95, 96, 98], "treeerror": [6, 7, 91, 92], "rais": [6, 7, 42], "popul": [6, 7, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92], "carri": [6, 7, 85], "option": [6, 7, 25, 26, 31, 39, 41, 42, 58, 83, 92, 94], "liter": [6, 7], "hard": [6, 7, 85], "enforc": [6, 7], "exce": [6, 7], "logist": [6, 7, 19, 20], "critic": [6, 7], "random": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 91, 92, 97, 98], "individu": [6, 7], "chosen": [6, 7, 85, 98], "die": [6, 7], "whenev": [6, 7], "being": [6, 7, 41, 44, 98], "exceed": [6, 7], "size": [6, 7, 8, 9, 10, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 95], "union": [6, 7, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "fresh": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "unpredict": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "entropi": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "pull": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "o": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67], "an": [6, 7, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 70, 87, 91, 98], "deriv": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "state": [6, 7, 8, 21, 22, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "numpi": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 66, 91, 92, 93, 95, 96, 97, 98], "directli": [6, 7, 8, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "print": [6, 7, 8, 91, 92, 93, 95, 98, 99, 100], "progress": [6, 7], "inform": [6, 7, 9, 16, 42], "n": [6, 7, 8, 43, 85, 87, 91, 92, 93, 95, 96, 97], "choos": [6, 7, 42, 85], "leaf": [6, 7, 58, 67, 92, 98], "mark": [6, 7], "via": [6, 7, 25, 26, 41, 42, 45, 49, 50, 52, 87, 98], "slice": [6, 7, 85, 92], "list": [6, 7, 9, 11, 12, 19, 20, 25, 26, 41, 42, 44, 58, 82, 85, 89, 93, 95, 96, 99], "all": [6, 7, 9, 12, 14, 21, 22, 25, 27, 29, 30, 42, 58, 70, 74, 89, 98], "aliv": [6, 7], "extract": [6, 7], "subtend": [6, 7], "unobserv": [6, 7, 92], "remove_mutation_ev": [6, 7, 92], "unifurc": [6, 7, 92], "preserv": [6, 7], "length": [6, 7, 9, 11, 12, 14, 19, 20, 41, 44, 79, 92], "annot": [6, 7], "count": [6, 7, 19, 20, 42, 58, 68, 91, 92, 98, 100], "child": [6, 7, 21, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 58, 67], "must": [6, 7, 31, 38, 41, 42, 45, 52], "have": [6, 7, 9, 10, 31, 38, 41, 42, 98], "color_bi": [6, 7], "arg": [6, 7, 21, 24, 31, 32, 37, 38, 40, 41, 42, 45, 48, 51, 52, 53, 85, 98], "cbar_fil": [6, 7], "thin": [6, 7], "wrapper": [6, 7], "around": [6, 7], "add": [6, 7, 42], "some": [6, 7, 21, 31, 42, 85], "custom": [6, 7, 42], "decor": [6, 7, 42], "color": [6, 7, 91, 92, 95, 98, 99, 100], "bar": [6, 7], "As": [6, 7, 42], "inlin": [6, 7, 91, 92, 98, 100], "notebook": [6, 7, 87, 98, 100], "see": [6, 7, 31, 33, 36, 40, 42, 45, 49, 50, 85, 87, 90], "also": [6, 7, 42, 43, 98], "tutori": [6, 7], "link": [6, 7], "api": [6, 7, 42], "doc": [6, 7, 85, 87, 101], "page": [6, 7, 87, 89], "without": [6, 7, 42, 85], "ar": [6, 7, 21, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 45, 58, 66, 67, 68, 85, 87, 92, 98], "specifi": [6, 7, 25, 26, 31, 32, 35, 36, 42, 45, 52, 94], "extinct": [6, 7, 92], "dot": [6, 7], "unsampl": [6, 7, 25, 27, 28, 29, 30], "non": [6, 7, 19, 20, 42, 98], "extint": [6, 7], "solid": [6, 7], "thick": [6, 7], "circl": [6, 7], "retain": [6, 7], "black": [6, 7, 95], "text": [6, 7], "below": [6, 7, 42, 58, 67], "green": [6, 7], "scalar": [6, 7, 41, 42], "save": [6, 7, 42], "sample_tre": [6, 93, 95, 96], "init_x": [6, 8, 93, 95, 96], "print_info": [6, 8], "extant_sampling_prob": [6, 8, 25, 27, 28, 29, 30, 93, 95, 96], "extinct_sampling_prob": [6, 8, 25, 28, 29, 30, 93, 95, 96], "evolve_kwarg": [6, 8], "root": [6, 7, 8, 45, 52, 58, 67, 83, 92], "summari": [6, 8, 9, 17, 85], "statist": [6, 8, 98], "To": [6, 8, 89, 95], "process": [7, 31, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 89], "mutat": [7, 21, 22, 25, 26, 27, 28, 29, 30, 45, 54, 85, 89, 92, 93, 95, 96, 98, 100], "birth": [7, 25, 26, 28, 29, 30, 85, 91, 92], "death": [7, 25, 26, 28, 29, 30, 85, 91, 92], "simul": [7, 8, 9, 15, 31, 32, 34, 35, 36, 37, 38, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 89, 100], "sampl": [7, 25, 26, 27, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 92, 94, 97], "__add__": 7, "allow": [7, 42], "sum": [7, 93, 95, 96, 98], "two": [7, 9, 10, 42, 58, 74], "add_child": 7, "name": [7, 9, 15, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 89, 94], "dist": [7, 92, 98], "support": [7, 41, 42], "new": [7, 9, 12, 42, 85], "supli": 7, "instanc": [7, 41, 42, 45, 46], "creat": [7, 41, 42, 87, 99], "given": [7, 9, 10, 19, 20, 21, 22, 23, 24, 25, 26, 31, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 74, 98], "distanc": 7, "partit": 7, "add_fac": 7, "face": [7, 100], "column": [7, 19, 20, 21, 22, 31, 33, 34, 94, 99, 100], "right": [7, 9, 10, 31, 34, 58, 67], "fix": 7, "alwai": 7, "attach": [7, 42], "independ": 7, "layout": 7, "inherit": 7, "integ": [7, 41, 42, 43, 98], "start": [7, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 98], "posibl": 7, "top": 7, "bottom": 7, "align": 7, "add_featur": 7, "pr_name": 7, "pr_valu": 7, "updat": [7, 31, 39, 42, 93, 95, 96], "featur": 7, "sever": [7, 45], "add_sist": 7, "sister": 7, "suppli": [7, 42], "check_monophyli": 7, "target_attr": 7, "ignore_miss": 7, "unroot": 7, "target": 7, "monophylet": 7, "under": [7, 42], "provid": [7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "set": [7, 9, 10, 19, 20, 41, 42, 43, 85, 94, 98, 100], "repres": [7, 42, 45, 49, 98], "current": [7, 25, 26, 29, 30, 31, 35, 41, 42, 43, 58, 68, 95], "structur": [7, 41, 42], "valueerror": [7, 42], "except": [7, 41, 42, 91, 92], "warn": [7, 58, 66], "strict": 7, "monophyli": 7, "could": 7, "never": 7, "reach": [7, 85], "behaviour": 7, "can": [7, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 87, 94], "avoid": [7, 93, 95, 96], "enabl": [7, 42, 45, 48], "expect": [7, 42, 98], "check": [7, 41, 42, 85, 92, 98], "e": [7, 9, 14, 16, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 55, 56, 58, 67, 85, 87, 91, 92, 98], "speci": 7, "gene": 7, "famili": 7, "miss": [7, 25, 28, 29, 30, 85, 99], "found": [7, 42, 87], "treat": [7, 42], "thu": [7, 9, 10, 42], "find": [7, 42, 45, 52], "even": 7, "outgroup": 7, "split": [7, 58, 74, 85, 98], "group": [7, 94], "tupl": [7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "ismonophylet": 7, "boolean": [7, 41, 42], "clade": 7, "paraphylet": 7, "polyphylet": 7, "break": [7, 91, 92], "properti": [7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "children": 7, "compar": [7, 95, 98], "ref_tre": 7, "use_collater": 7, "min_support_sourc": 7, "min_support_ref": 7, "has_dupl": 7, "expand_polytomi": 7, "max_treeko_splits_to_be_artifact": 7, "ref_tree_attr": 7, "source_tree_attr": 7, "anoth": [7, 42], "robinson": 7, "fould": 7, "symmetr": 7, "share": 7, "edg": 7, "duplic": 7, "item": [7, 95, 96, 97], "python": [7, 41, 42, 87, 90], "convert_to_ultrametr": 7, "tree_length": 7, "strategi": 7, "balanc": [7, 98, 100], "convert": [7, 9, 16], "ultrametr": 7, "topologi": [7, 42], "same": [7, 9, 10, 12, 41, 42, 44, 58, 67, 98], "note": [7, 9, 10, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85], "inspect": 7, "img_styl": 7, "cophenetic_matrix": 7, "cophenet": 7, "treee": 7, "standard": [7, 31, 35], "output": [7, 41, 42, 43, 44, 45, 54, 58, 83, 85, 94], "en": 7, "wikipedia": 7, "org": [7, 25, 28, 29, 30, 41, 42, 44, 58, 67], "wiki": 7, "represent": 7, "between": [7, 19, 20, 42, 85, 98], "like": [7, 41, 42, 87], "_____________": 7, "y": [7, 98, 99, 100], "b": [7, 19, 42, 85], "________": 7, "z": 7, "c": [7, 42, 87, 94, 99], "____________": 7, "d": [7, 42], "______": 7, "w": [7, 42, 92, 97, 98, 100], "where": [7, 25, 27, 31, 34, 41, 42, 98], "intern": [7, 42], "idea": 7, "inspir": 7, "team": 7, "gist": 7, "github": [7, 87, 100], "jhcepa": 7, "279f9009f46bf675e3a890c19191158b": 7, "For": [7, 41, 42, 43, 45, 49, 91], "its": [7, 25, 26, 41, 42, 58, 67, 82], "g": [7, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 85, 87], "make": [7, 9, 10, 42, 58, 70, 85, 87, 98], "orderless": 7, "Then": [7, 58, 67, 98], "xor": 7, "onli": [7, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85], "element": 7, "one": [7, 9, 16, 41, 42, 44, 100], "other": [7, 25, 26, 41, 42, 58, 66, 85], "both": [7, 42, 98], "In": [7, 42, 98], "case": [7, 42], "those": [7, 85], "parent": [7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "One": 7, "more": [7, 9, 10, 42, 85, 98], "optim": [7, 25, 26, 45, 48], "sinc": [7, 42, 85], "itself": 7, "user": [7, 98, 99], "itertool": [7, 96], "combin": [7, 19, 20, 45, 49], "rather": [7, 42], "permut": 7, "cut": 7, "our": 7, "comput": [7, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 58, 67], "theta": [7, 45, 46, 96, 98, 99], "2": [7, 9, 10, 41, 42, 43, 44, 45, 55, 58, 67, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100], "2n": 7, "still": [7, 42], "great": 7, "realiti": 7, "speed": 7, "up": [7, 43, 92, 98, 100], "larg": [7, 98], "dimension": 7, "arrai": [7, 9, 12, 25, 26, 41, 42, 93, 95, 96, 97], "order": [7, 25, 26, 31, 34, 42], "thei": [7, 9, 12, 42], "appear": 7, "row": [7, 9, 10, 31, 34, 97, 98, 99], "header": 7, "filenam": [7, 13, 18], "write": [7, 9, 17, 42, 58, 83, 92], "cpickl": 7, "variabl": [7, 41, 42], "protocol": 7, "accept": [7, 42, 45, 54, 95], "newick": 7, "string": [7, 31, 40, 42], "serialis": 7, "extend": [7, 98, 99, 100], "format": [7, 42, 87], "exclud": 7, "whole": 7, "content": 7, "clone": 7, "object": [7, 19, 20, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 55, 56, 99], "slower": 7, "recommend": [7, 41, 42], "full": [7, 42, 94], "deepcopi": 7, "slowest": 7, "complex": [7, 25, 26, 31, 32, 34, 36], "point": [7, 31, 36, 100], "etc": [7, 41, 42], "del_featur": 7, "perman": 7, "delet": 7, "prevent_nondicotom": 7, "preserve_branch_length": 7, "notic": [7, 93, 95, 96], "disappear": 7, "mean": [7, 31, 35, 41, 42, 44, 92, 98], "transfer": 7, "next": 7, "avail": [7, 89], "default": [7, 9, 10, 41, 42, 45, 52, 58, 70, 85], "execut": [7, 41, 42], "recurs": [7, 42, 85], "prevent": [7, 98], "singl": [7, 42, 100], "keep": [7, 42], "origin": [7, 42, 45, 50, 98, 101], "among": [7, 85, 98], "exampl": [7, 41, 42, 43, 45, 49, 85], "h": [7, 85, 92], "produc": [7, 19, 20, 42, 98], "describ": [7, 42, 58, 67], "about": 7, "connect": [7, 42], "detach": 7, "descend": [7, 98], "refer": [7, 9, 10, 42], "conserv": [7, 85], "through": [7, 85], "mechan": 7, "seen": 7, "past": 7, "map_attr": 7, "polytomy_size_limit": 7, "5": [7, 19, 20, 25, 28, 29, 30, 76, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "skip_large_polytomi": 7, "version": [7, 58, 66, 99], "3": [7, 42, 58, 67, 70, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100], "polytomi": 7, "possibl": [7, 19, 20, 85], "solut": 7, "multifurc": 7, "ajmonlin": 7, "2010": 7, "darwin": 7, "php": 7, "static": 7, "from_parent_child_t": 7, "parent_child_t": 7, "tabl": [7, 31, 33, 42], "contain": [7, 41, 42, 98, 99], "relationship": [7, 19, 20], "from_skbio": 7, "skbio_tre": 7, "map_attribut": 7, "scikit": 7, "bio": [7, 98, 99, 100], "nane": 7, "map": [7, 19, 20, 22, 23, 24, 25, 26, 31, 39, 45, 48, 49, 50, 51, 52, 53, 54, 92, 98, 99], "id": [7, 98, 99, 100], "from_skibio": 7, "skbiotre": 7, "get_ancestor": 7, "versionad": 7, "ancestor": [7, 58, 67], "get_ascii": 7, "show_intern": 7, "compact": [7, 9, 10], "ascii": 7, "includ": [7, 9, 10, 19, 20, 21, 25, 27, 31, 41, 42, 45, 58, 83, 91], "exactli": [7, 42], "line": [7, 100, 101], "per": [7, 19, 20, 41, 42, 44, 45, 54, 93, 95, 96], "tip": [7, 91, 92], "shown": [7, 42], "get_cached_cont": 7, "store_attr": 7, "container_typ": 7, "leaves_onli": 7, "_store": 7, "preload": 7, "Such": 7, "intend": 7, "cach": [7, 31, 33, 39, 42, 45, 54], "oper": 7, "requir": [7, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 90], "mani": [7, 85], "travers": [7, 93, 95, 100], "get_children": 7, "get_closest_leaf": 7, "topology_onli": 7, "is_leaf_fn": 7, "closest": [7, 58, 67], "them": [7, 9, 10, 58, 74, 98], "word": 7, "topolog": 7, "instead": [7, 41, 42, 85, 87, 99], "get_common_ancestor": 7, "target_nod": 7, "karg": 7, "common": 7, "01": [7, 25, 29, 41, 44, 93, 100], "001": [7, 85, 92], "0001": 7, "nhx": 7, "00001": 7, "000001": 7, "get_descendants_by_nam": 7, "get_descend": [7, 100], "levelord": 7, "document": [7, 87, 90], "get_dist": [7, 100], "target2": 7, "within": [7, 43, 85], "get_edg": 7, "cached_cont": 7, "separ": 7, "get_farthest_leaf": 7, "farthest": 7, "get_farthest_nod": 7, "get_leaf_nam": 7, "termin": [7, 100], "get_leav": 7, "get_leaves_by_nam": 7, "match": [7, 25, 26, 31, 34, 41, 42], "get_midpoint_outgroup": 7, "divid": [7, 9, 14], "get_monophylet": 7, "criteria": 7, "consid": [7, 42], "exclus": 7, "get_sist": 7, "get_topology_id": 7, "uniqu": 7, "sure": [7, 42], "binari": [7, 100], "befor": [7, 9, 10, 41, 42, 64], "detect": 7, "over": [7, 21, 22, 25, 28, 29, 30, 93, 95, 96, 98], "bunch": 7, "calcul": 7, "get_tree_root": 7, "absolut": [7, 19, 20], "is_leaf": [7, 98, 100], "is_root": [7, 100], "iter_ancestor": 7, "iter": [7, 31, 34, 45, 52, 91, 92], "iter_descend": [7, 92, 98], "iter_edg": 7, "iter_leaf_nam": 7, "iter_leav": [7, 98], "iter_prepostord": 7, "yield": [7, 45, 50], "everi": [7, 9, 10, 42, 43, 58, 67, 98], "pre": [7, 42], "post": [7, 42], "postord": 7, "visit": 7, "iter_search_nod": 7, "search": [7, 89], "wai": [7, 42, 85, 98], "need": [7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 87], "scan": 7, "deal": 7, "huge": 7, "ladder": [7, 9, 10, 11, 58, 67], "direct": 7, "sort": [7, 42, 58, 67], "swap": 7, "f": [7, 41, 44, 45, 49, 58, 67, 91, 92, 95, 97, 98], "names_librari": 7, "reuse_nam": 7, "random_branch": 7, "branch_rang": 7, "support_rang": 7, "librari": [7, 94], "necessarili": 7, "bit": 7, "effici": 7, "rang": [7, 85, 91, 92, 95, 97, 98, 99, 100], "remove_child": 7, "exit": 7, "longer": 7, "remove_sist": 7, "It": [7, 9, 10, 41, 42], "resolve_polytomi": 7, "default_dist": 7, "default_support": 7, "resolv": 7, "arbitrari": [7, 31, 45], "dicotom": 7, "affect": 7, "randomli": 7, "modifi": [7, 9, 10, 12, 31, 37, 42], "compat": [7, 41, 42, 43], "reason": [7, 41, 42], "program": 7, "reject": 7, "artifici": 7, "robinson_fould": 7, "t2": 7, "attr_t1": 7, "attr_t2": 7, "unrooted_tre": 7, "correct_by_polytomy_s": 7, "min_support_t1": 7, "min_support_t2": 7, "expand": 7, "nodetre": 7, "rf": 7, "rf_max": 7, "common_attr": 7, "edges_t1": 7, "edges_t2": 7, "discarded_edges_t1": 7, "discarded_edges_t2": 7, "search_nod": 7, "human": 7, "set_outgroup": 7, "basal": 7, "set_styl": [7, 100], "node_styl": 7, "style": 7, "show": [7, 91, 92, 95, 96, 97], "tree_styl": [7, 92, 100], "interact": [7, 45, 49, 91], "session": 7, "treestyl": [7, 92, 100], "sort_descend": 7, "extra": 7, "delete_orphan": 7, "automat": [7, 41, 42, 87], "swap_children": 7, "preorder": 7, "interrog": 7, "receiv": [7, 42, 98], "dynam": [7, 41, 42, 44, 58, 67], "collaps": 7, "mode": [7, 41, 42, 43], "legaci": 7, "appli": [7, 31, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 98], "associ": [7, 42], "remain": 7, "drop": 7, "outfil": 7, "format_root_nod": 7, "dist_formatt": 7, "support_formatt": 7, "name_formatt": 7, "quoted_node_nam": 7, "control": [7, 41, 42, 43], "export": [7, 87], "empti": 7, "encod": [7, 41, 44, 85, 89], "detail": 7, "part": [7, 25, 28, 42], "encode_tre": 9, "intre": [9, 10, 11, 14], "max_leaf_count": [9, 10, 11], "dont_scal": [9, 10], "biject": [9, 10], "vector": [9, 10, 42], "form": [9, 10], "doe": [9, 10, 12, 42], "input": [9, 10, 12, 19, 20, 41, 42, 85], "cblv": [9, 10], "adapt": [9, 10, 41, 44, 58, 67, 100], "figur": [9, 10, 91, 92], "2a": [9, 10], "v": [9, 10, 41, 44, 58, 67, 99], "voznica": [9, 10, 41, 44, 58, 67], "al": [9, 10, 41, 44, 58, 67], "2022": [9, 10, 41, 44, 58, 67], "addit": [9, 10, 21, 22, 25, 26, 41, 42, 45, 49, 92], "append": [9, 10, 95, 96, 98, 99, 100], "third": [9, 10], "fourth": [9, 10], "so": [9, 10, 12, 42, 85], "you": [9, 10, 42, 87, 94], "ve": [9, 10, 85], "alreadi": [9, 10, 42, 85], "done": [9, 10, 42, 58, 67], "often": [9, 10, 42, 85], "sens": [9, 10], "pad": [9, 10, 12, 58, 74], "model": [9, 10, 19, 20, 31, 33, 41, 42, 43, 85, 89, 96, 98, 99, 100], "pad_tre": [9, 10], "try": [9, 10, 16, 42, 85, 87, 91, 92, 96], "guess": [9, 10], "ndarrai": [9, 10, 11, 25, 26], "scale_tre": 9, "averag": [9, 11, 14, 42, 85, 93, 95, 96], "brlen": [9, 14], "outtre": [9, 14], "val": [9, 11, 97], "trivialize_encod": 9, "encoded_tre": [9, 16, 17, 41, 44], "param_v": [9, 16], "nois": [9, 16], "max_print": [9, 16], "10": [9, 16, 19, 20, 25, 28, 29, 30, 41, 42, 44, 58, 67, 77, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "n_debug": [9, 16], "trivial": [9, 16, 85], "replac": [9, 16, 98], "actual": [9, 16], "re": [9, 12, 16, 42], "predict": [9, 16, 41, 43, 44, 85], "min_n_max_leav": [9, 12], "100": [9, 12, 45, 49, 50, 52, 85, 91, 92, 93, 95, 96, 97], "simfn": 9, "odir": [9, 15], "ftype": [9, 15], "itrial": [9, 15, 78, 85], "write_training_fil": 9, "outdir": [9, 17, 69, 85], "sstat": [9, 17], "dbgstr": [9, 17], "npy": [9, 17, 85], "fcn": [9, 17], "pkl": [9, 17, 85, 97], "stat": [9, 17, 31, 36, 85, 95], "determin": [19, 20, 98], "cell": [19, 20, 85, 92, 98, 99, 100], "germin": [19, 85, 89], "center": [19, 85, 89], "zone": 19, "tfh_function": [19, 20], "concentration_antigen": [19, 20, 98, 99, 100], "1e": [19, 20, 25, 29, 45, 49, 50, 52, 58, 66, 91], "collect": [19, 20, 25, 26, 41, 42, 100], "callabl": [19, 20, 25, 26, 31, 36, 42, 45, 49, 50], "kd": [19, 20, 98, 99, 100], "help": [19, 20, 98, 99, 100], "take": [19, 20, 41, 42], "k_d": [19, 20, 98], "quantiti": [19, 20, 98], "molar": [19, 20], "concentr": [19, 20, 99], "antigen": [19, 20, 98, 99], "bound": [19, 20, 25, 26, 98, 99], "linear_fit": [19, 20, 99, 100], "kd_valu": [19, 20], "y_intercept": [19, 20, 98, 100], "slope": [19, 20, 98, 100], "get": [19, 20, 41, 42, 97], "linear": [19, 20, 98, 99, 100], "amount": [19, 20], "coeffici": [19, 20], "normal": [19, 20, 42, 98, 99], "t_cell_help_valu": [19, 20], "uniform_fit": [19, 20, 99], "equal": [19, 20], "equival": [19, 20, 42], "assum": [19, 20, 25, 28, 41, 42, 58, 67], "uniform": [19, 20, 31, 40, 85, 99, 100], "distribut": [19, 20, 42, 91, 92, 98], "normalized_t_cell_help": [19, 20, 99, 100], "sigmoidal_fit": [19, 20, 99, 100], "maximum_tfh": [19, 20], "4": [19, 20, 42, 59, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "curve_steep": [19, 20, 98], "midpoint_antigen_bound": [19, 20], "sigmoid": [19, 20, 45, 55, 85, 98, 99], "maximum": [19, 20, 45, 52, 98], "growth": [19, 20, 85], "midpoint": [19, 20], "normalized_fitness_df": [19, 20, 99, 100], "seq_list": [19, 20], "calculate_kd": [19, 20, 98, 99, 100], "dna": [19, 20, 21, 22, 23, 24, 31, 38], "frac_antigen_bound": [19, 20, 99], "t_cell_help": [19, 20, 99], "cell_divisions_from_tfh_linear": [19, 20, 99], "norm_t_cell_help": [19, 20], "linearli": [19, 20, 99], "divis": [19, 20, 98, 99], "correspond": [19, 20, 21, 22, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67], "interest": [19, 20], "cycl": [19, 20, 98, 100], "cell_divis": [19, 20], "abstract": [21, 24, 31, 32, 37, 38, 42, 45, 48, 51, 52, 53], "gp": [21, 22, 23, 24], "concret": [21, 31, 45, 52], "abc": [21, 24, 31, 37, 45, 53], "constantgpmap": 21, "constant": [21, 23, 41, 42, 44, 45, 46, 85, 93, 95, 96, 98], "evalu": [21, 22, 23, 24, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "additivegpmap": [21, 92], "mutation_effect": [21, 22], "nonsense_phenotyp": [21, 22, 92], "nan": [21, 22], "amino": [21, 22], "acid": [21, 22], "panda": [21, 22, 97, 98, 99, 100], "site": [21, 22, 45, 54, 98, 99], "translat": [21, 22, 31, 39], "ident": [21, 22, 85, 94], "nonsens": [21, 22], "stop": [21, 22], "codon": [21, 22], "__call__": [22, 23, 24, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "genotyp": [24, 92], "bdm": [25, 45, 46, 47, 48, 51, 52, 53, 55, 56, 85, 89, 91, 92, 93, 95, 96], "infer": [25, 28, 29, 30, 41, 42, 85, 89], "birthdeathmodel": [25, 93, 96], "log_likelihood": [25, 26, 93, 95, 96], "optimized_paramet": [25, 26, 93, 96], "fixed_paramet": [25, 26, 93, 96], "opt_kwarg": [25, 26], "log": [25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 96], "likelihood": [25, 26, 94, 96], "fit": [25, 26, 31, 36, 41, 42, 43, 44, 89, 93, 96, 97, 98, 99, 100], "kei": [25, 26, 41, 43, 97], "jaxopt": [25, 26], "scipyboundedminim": [25, 26], "jit": [25, 26, 95], "mai": [25, 26, 41, 42, 43, 58, 67], "compil": [25, 26, 43, 45, 48, 95], "gradient": [25, 26, 42, 45, 48], "lower_bound": [25, 26], "upper_bound": [25, 26], "bool_": [25, 26], "lower": [25, 26], "upper": [25, 26], "lexograph": [25, 26], "eg": [25, 26], "xscale": [25, 26, 45, 47, 55, 56, 85, 91, 92, 93, 95, 97], "xshift": [25, 26, 45, 47, 55, 56, 85, 91, 92, 93, 95], "yscale": [25, 26, 45, 47, 55, 56, 85, 91, 92, 93, 95], "yshift": [25, 26, 45, 47, 55, 56, 85, 91, 92, 93, 95], "naive_log_likelihood": 25, "fulli": [25, 27], "observ": [25, 27, 85, 98], "fossil": [25, 27, 28, 29, 30], "call": [25, 27, 28, 29, 30, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "stadler_appx_log_likelihood": [25, 93, 95, 96], "present_tim": [25, 28, 29, 30, 93, 95, 96], "do": [25, 28, 42, 89], "barido": [25, 28, 29, 30], "sottani": [25, 28, 29, 30], "jo\u00ebll": [25, 28, 29, 30], "timothi": [25, 28, 29, 30], "vaughan": [25, 28, 29, 30], "tanja": [25, 28, 29, 30], "stadler": [25, 28, 29, 30, 94], "multityp": [25, 28, 29, 30], "bayesian": [25, 28, 29, 30], "specif": [25, 28, 29, 30, 41, 42, 94], "edit": [25, 28, 29, 30], "adrian": [25, 28, 29, 30], "paterson": [25, 28, 29, 30], "systemat": [25, 28, 29, 30], "biologi": [25, 28, 29, 30], "69": [25, 28, 29, 30, 97], "septemb": [25, 28, 29, 30], "2020": [25, 28, 29, 30], "973": [25, 28, 29, 30], "86": [25, 28, 29, 30, 97], "doi": [25, 28, 29, 30, 41, 44, 58, 67], "1093": [25, 28, 29, 30], "sysbio": [25, 28, 29, 30], "syaa016": [25, 28, 29, 30], "stadler_full_log_likelihood": [25, 93], "rtol": [25, 29], "05": [25, 29, 97, 99], "atol": [25, 29], "09": [25, 29, 98, 99], "dtmax": [25, 29, 93], "py": [25, 29, 30, 94, 98, 99], "discretemut": [25, 29, 30, 31, 93, 95, 96], "diagon": [25, 29, 30], "poisson": [25, 29, 30, 89, 91, 92, 93, 95, 96, 97], "homogen": [25, 29, 30, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56], "stadler_full_log_likelihood_scipi": 25, "solve_ivp_arg": [25, 30], "jax": [25, 30, 45, 48, 93, 95, 96], "free": [25, 30, 41, 42], "implement": [25, 30, 42, 45, 52], "depend": [31, 42, 45, 49, 50, 52, 87], "place": [31, 32, 34, 35, 36, 37, 38, 39, 40, 58, 67], "logprob": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "give": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "mutant": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "node_attr": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "propag": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42], "cleanup": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "perform": [31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56], "attrmut": [31, 34, 35, 36, 38, 39], "prob": [31, 32, 33, 34, 35, 36, 38, 39, 40, 91, 92], "attr1": [31, 32, 33, 34, 35, 36, 38, 39, 40], "attr2": [31, 32, 33, 34, 35, 36, 38, 39, 40], "conveni": [31, 32, 33, 34, 35, 36, 38, 39, 40], "continu": [31, 32, 33, 34, 35, 36, 38, 39, 40, 91, 92], "mass": [31, 32, 33, 34, 35, 36, 38, 39, 40], "discret": [31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 98], "bring": [31, 32, 33, 34, 35, 36, 38, 39, 40], "plot": [31, 32, 33, 34, 35, 36, 38, 39, 40, 85, 91, 92, 94, 95, 100], "_supportsarrai": [31, 32, 34, 36], "dtype": [31, 32, 34, 36, 42, 93, 95, 97], "_nestedsequ": [31, 32, 34, 36], "byte": [31, 32, 34, 36], "final": [31, 32, 33, 34, 35, 36, 38, 39, 40, 42], "gaussian": [31, 35, 36], "wrt": [31, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "deviat": [31, 35], "kdemut": 31, "dataset": [31, 36], "bw_method": [31, 36], "weight": [31, 36, 42, 98], "kernel": [31, 36, 42], "estim": [31, 36, 41, 44], "kde": [31, 36], "bandwidth": [31, 36], "scipi": [31, 36, 95], "gaussian_kd": [31, 36], "state_spac": [31, 34, 93, 95, 96], "transition_matrix": [31, 34, 93, 95, 96], "space": [31, 34], "stochast": [31, 34], "hashabl": [31, 34], "sequencemut": [31, 33, 39, 40], "uniformmut": [31, 98, 100], "consist": [31, 33, 40, 92, 98], "charact": [31, 33, 40], "acgt": [31, 33, 40], "contextmut": [31, 92], "hotspot": [31, 33, 100], "awar": [31, 33, 100], "express": [31, 33, 99], "term": [31, 33, 85], "context": [31, 33, 39, 45, 54, 58, 74, 82, 92], "bia": [31, 33, 42], "clear": [31, 33, 39, 45, 54], "aid": [31, 33], "5mer": [31, 33, 58, 74, 82], "sequencephenotypemut": [31, 92], "sequence_mut": [31, 39], "gp_map": [31, 39, 92], "modif": [31, 39], "gpmap": [31, 39, 89, 92], "level": [31, 39, 85], "neural": [41, 44, 85], "network": [41, 42, 44, 85], "callback": 41, "max_epoch": [41, 43], "use_valid": [41, 43], "kera": [41, 42, 43, 85], "on_train_begin": [41, 43], "epoch": [41, 43, 44, 85, 97], "begin": [41, 43], "train": [41, 42, 43, 44, 85], "action": [41, 43], "chang": [41, 42, 43, 85], "futur": [41, 43, 99], "on_epoch_begin": [41, 43], "dure": [41, 42, 43, 85], "on_epoch_end": [41, 43], "batch": [41, 43], "end": [41, 43], "metric": [41, 42, 43], "valid": [41, 43, 85], "prefix": [41, 43], "val_": [41, 43], "loss": [41, 42, 43, 97], "accuraci": [41, 43], "7": [41, 43, 91, 93, 95, 96, 97, 100], "bundlemeanlay": 41, "layer": [41, 42, 44, 98, 99], "shape": [41, 42, 94], "number_of_bundl": [41, 42], "bundle_s": [41, 42, 44, 76, 85], "feature_dim": [41, 42], "logic": [41, 42], "live": [41, 42], "invoc": [41, 42], "wrap": [41, 42], "creation": [41, 42], "resourc": [41, 42], "tf": [41, 42, 43], "init_scop": [41, 42], "nest": [41, 42], "__init__": [41, 42], "build": [41, 42, 87], "tensor": [41, 42], "subject": [41, 42], "special": [41, 42], "rule": [41, 42], "explicitli": [41, 42], "cannot": [41, 42], "cast": [41, 42], "mask": [41, 42, 94], "metadata": [41, 42], "built": [41, 42], "input_shap": [41, 42], "info": [41, 42, 86, 90, 101], "input_spec": [41, 42], "against": [41, 42], "mix": [41, 42], "precis": [41, 42], "behavior": [41, 42, 98], "handl": [41, 42], "manual": [41, 42], "savedmodel": [41, 42], "integr": [41, 42], "ecosystem": [41, 42], "packag": [41, 42, 87, 89, 90, 94, 98, 99, 101], "tfmot": [41, 42], "tflite": [41, 42], "j": [41, 42, 44, 58, 67], "although": [41, 42], "reserv": [41, 42], "meant": [41, 42], "previou": [41, 42], "did": [41, 42], "come": [41, 42], "came": [41, 42], "compute_output_shap": [41, 42], "caus": [41, 42], "happen": [41, 42], "later": [41, 42, 95], "here": [41, 42, 86, 101], "tensorshap": [41, 42], "dimens": [41, 42, 44], "neuralnetworkmodel": [41, 97], "50": [41, 44, 85, 92, 95, 96, 97, 100], "dropout_r": [41, 44, 85], "learning_r": [41, 44, 85], "ema_momentum": [41, 44, 85], "99": [41, 44, 85, 97], "zhukova": [41, 44, 58, 67], "boskova": [41, 44, 58, 67], "saulnier": [41, 44, 58, 67], "lemoin": [41, 44, 58, 67], "m": [41, 44, 58, 67], "moslonka": [41, 44, 58, 67], "lefebvr": [41, 44, 58, 67], "gascuel": [41, 44, 58, 67], "deep": [41, 44, 58, 67, 85], "learn": [41, 44, 58, 67, 85], "phylogeni": [41, 44, 58, 67], "uncov": [41, 44, 58, 67], "epidemiolog": [41, 44, 58, 67], "outbreak": [41, 44, 58, 67], "natur": [41, 44, 58, 67], "commun": [41, 44, 58, 67], "13": [41, 44, 58, 67, 91, 97, 98], "juli": [41, 44, 58, 67], "6": [41, 44, 58, 67, 91, 93, 97, 99, 100], "3896": [41, 44, 58, 67], "1038": [41, 44, 58, 67], "s41467": [41, 44, 58, 67], "022": [41, 44, 58, 67], "31511": [41, 44, 58, 67], "second": [41, 44], "atm": [41, 44, 85], "just": [41, 44, 85], "aren": [41, 42, 44], "bundl": [41, 44, 85], "togeth": [41, 44], "convolut": [41, 44], "dens": [41, 42, 44], "30": [41, 42, 44, 76, 85, 91, 94, 97], "validation_split": [41, 44, 69, 85], "step": [42, 97, 98], "self": [42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "invalid": 42, "runtimeerror": 42, "super": [42, 58, 66, 85], "wa": [42, 94], "constructor": 42, "activity_regular": 42, "regular": 42, "add_loss": 42, "potenti": [42, 58, 83], "activ": [42, 87], "henc": 42, "reus": 42, "entri": [42, 101], "track": 42, "insid": 42, "mylay": 42, "def": [42, 91, 95, 99, 100], "reduce_mean": 42, "code": [42, 87, 89], "across": 42, "replica": 42, "loop": 42, "compliant": 42, "construct": 42, "symbol": 42, "abl": 42, "trace": 42, "back": 42, "These": [42, 98], "becom": 42, "get_config": 42, "your": 42, "serial": 42, "backward": [42, 43], "add_metr": 42, "mymetriclay": 42, "my_metric_lay": 42, "metric_1": 42, "reduce_sum": 42, "metric_2": 42, "math_op": 42, "becaus": [42, 93, 95, 96], "aggreg": [42, 43, 45, 54], "add_upd": 42, "op": 42, "move": 42, "varianc": 42, "batchnorm": 42, "ignor": [42, 85], "eager": 42, "fly": 42, "disabl": 42, "trainabl": 42, "add_vari": 42, "deprec": [42, 99], "NOT": 42, "alia": [42, 43], "add_weight": 42, "constraint": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91], "use_resourc": 42, "synchron": [42, 85], "variablesynchron": 42, "auto": 42, "variableaggregationv2": 42, "unspecifi": 42, "trainable_vari": 42, "bias": 42, "non_trainable_vari": 42, "on_read": 42, "resourcevari": 42, "guid": 42, "www": 42, "tensorflow": [42, 97], "migrat": 42, "tf1_vs_tf2": 42, "resourcevariables_instead_of_referencevari": 42, "By": [42, 85], "distributionstrategi": 42, "how": [42, 98], "variableaggreg": 42, "getter": 42, "experimental_autocast": 42, "caching_devic": 42, "unsupport": 42, "instanti": 42, "invok": 42, "typic": 42, "build_from_config": 42, "config": [42, 93, 94, 95, 96], "load": [42, 97], "compute_dtyp": 42, "dtype_polici": 42, "well": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "insert": 42, "own": 42, "certain": 42, "higher": 42, "float16": 42, "bfloat16": 42, "numer": 42, "stabil": 42, "compute_mask": 42, "compute_output_signatur": 42, "input_signatur": 42, "signatur": 42, "unlik": 42, "tensorspec": 42, "doesn": 42, "framework": 42, "fall": 42, "candid": 42, "would": 42, "transform": 42, "typeerror": 42, "count_param": 42, "total": 42, "compos": 42, "isn": 42, "yet": 42, "variable_dtyp": 42, "polici": 42, "mixed_precis": 42, "finalize_st": 42, "overridden": 42, "restor": 42, "classmethod": 42, "from_config": 42, "revers": 42, "capabl": 42, "nor": 42, "set_weight": 42, "get_build_config": 42, "lookup": 42, "unusu": 42, "attempt": 42, "upon": 42, "serializ": 42, "configur": 42, "reinstanti": 42, "guarante": 42, "caller": 42, "want": 42, "get_input_at": 42, "node_index": 42, "retriev": [42, 94], "multipl": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85], "get_input_mask_at": 42, "get_input_shape_at": 42, "get_output_at": 42, "get_output_mask_at": 42, "get_output_shape_at": 42, "get_weight": 42, "turn": 42, "similarli": 42, "parameter": 42, "layer_a": 42, "kernel_initi": 42, "constant_initi": 42, "a_out": 42, "convert_to_tensor": 42, "float32": 42, "layer_b": 42, "b_out": 42, "20": [42, 69, 72, 85, 91, 92, 94, 97, 98], "inbound_nod": 42, "upstream": 42, "applic": 42, "incom": 42, "attributeerror": 42, "inbound": 42, "input_mask": 42, "inputspec": 42, "conv2d": 42, "rank": 42, "ndim": 42, "now": [42, 95], "nice": 42, "error": [42, 87, 93, 95, 96], "incompat": 42, "thereof": 42, "load_own_vari": 42, "store": 42, "load_model": 42, "access": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "safe": 42, "gradienttap": 42, "l": 42, "np": [42, 91, 92, 93, 95, 96, 97], "ones": [42, 85], "len": [42, 91, 92, 93, 95, 97, 98, 99, 100], "name_scop": 42, "submodul": 42, "reflect": 42, "wish": 42, "don": 42, "breadth": 42, "non_trainable_weight": 42, "outbound_nod": 42, "downstream": 42, "output_mask": 42, "output_shap": 42, "save_own_vari": 42, "sub": [42, 85], "supports_mask": 42, "trainable_weight": 42, "descent": 42, "themselv": 42, "with_name_scop": 42, "enter": 42, "scope": 42, "mymodul": 42, "hasattr": 42, "matmul": 42, "whose": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67], "mod": 42, "my_modul": 42, "on_batch_begin": 43, "on_train_batch_begin": 43, "on_batch_end": 43, "on_train_batch_end": 43, "on_predict_batch_begin": 43, "steps_per_execut": 43, "on_predict_batch_end": 43, "until": [43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 68, 98], "on_predict_begin": 43, "on_predict_end": 43, "on_test_batch_begin": 43, "on_test_batch_end": 43, "on_test_begin": 43, "on_test_end": 43, "last": 43, "on_train_end": 43, "\u03bb": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91], "\u03b4t": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "intens": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "inhomogen": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 89], "measur": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "interv": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "int_": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "dt": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "wait": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "lebesgu": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "\u03bb_inv": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "\u03c4": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "invers": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "lambda_t": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "tau": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "iff": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "foral": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "waiting_time_rv": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "rate_multipli": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "factor": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 99], "impos": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "waiting_time_logsf": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "logarithm": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "homogeneousrespons": [45, 51, 54], "grad": [45, 48], "\u03bb_homogen": [45, 46, 47, 48, 51, 54, 55, 56], "phenotyperespons": [45, 46, 47, 49, 50, 55, 56], "\u03bb_phenotyp": [45, 46, 47, 51, 55, 56, 91, 92, 95], "lambda_x": [45, 46, 47, 49, 50, 51, 52, 55, 56], "exponentialrespons": 45, "exponenti": [45, 47], "theta_3": [45, 47, 55, 56], "theta_1": [45, 47, 55, 56], "theta_2": [45, 47, 55, 56], "theta_4": [45, 47, 55, 56], "sigmoidrespons": [45, 91, 92, 93, 95, 96], "frac": [45, 55, 85], "softrelurespons": 45, "soft": [45, 56, 85], "relu": [45, 56, 85], "sequencecontextmutationrespons": [45, 92], "mutation_intens": [45, 54, 92], "phenotypetimerespons": [45, 49, 50], "tol": [45, 49, 50, 52], "06": [45, 49, 50, 52, 96], "maxit": [45, 49, 50, 52], "explicit": [45, 52], "quadratur": [45, 52], "respect": [45, 52], "toler": [45, 52], "\u03bb_phenotype_tim": [45, 49, 50, 52, 91], "modulatedphenotyperespons": [45, 91], "phenotype_respons": [45, 49, 50], "external_field": [45, 49], "extern": [45, 49, 91], "field": [45, 49, 91], "tild": [45, 49, 50, 91], "phi": [45, 49, 91], "modulatedraterespons": [45, 91], "use_jax": 57, "simple_fivemer_context": 58, "decompos": [58, 82], "padded_fivemer_contexts_of_paired_sequ": 58, "pair": [58, 74, 85], "apart": [58, 74], "subsequ": [58, 74], "appropri": [58, 74], "write_leaf_sequences_to_fasta": [58, 92], "file_path": [58, 83], "fasta": [58, 83, 92, 98, 99, 100], "ladderize_tre": [58, 97], "procedur": [58, 67], "ascend": [58, 67], "immedi": [58, 67], "prior": [58, 67, 94], "reorder": [58, 67], "decreas": [58, 67], "left": [58, 62, 67], "most": [58, 67], "recent": [58, 67], "largest": [58, 67], "tie": [58, 67], "breaker": [58, 67], "isclos": [58, 92, 100], "num1": [58, 66], "num2": [58, 66], "ep": [58, 66], "08": [58, 66, 98], "fail": [58, 66, 85, 87, 91, 92, 97], "closer": [58, 66], "slow": [58, 66, 85], "limit_proc": 58, "proc": [58, 68, 85], "n_max_proc": [58, 68, 85], "sleep_tim": [58, 68], "sleep": [58, 68], "less": [58, 68, 91, 93, 95, 96], "make_html": 58, "plotdir": [58, 70, 75, 76, 78], "n_column": [58, 59, 70], "extens": [58, 70], "svg": [58, 70], "titl": [58, 70], "foop": [58, 70], "bgcolor": [58, 70], "000000": [58, 70], "new_table_each_row": [58, 70], "htmlfname": [58, 70], "extra_link": [58, 70], "html": [58, 70, 87], "displai": [58, 70, 98, 100], "fn": 59, "clist": [60, 61, 64, 65, 80, 81], "argstr": [60, 61, 64, 65, 80, 81], "col": 62, "seq": [62, 85, 92, 98, 99, 100], "width": [62, 94], "padsid": 62, "ref_seq": 63, "qseq": 63, "new_arg_str": 64, "has_arg": [64, 80, 81], "prdf": 69, "params_to_predict": 69, "xtra_txt": 69, "fsize": [69, 72], "label_fs": [69, 72], "15": [69, 72, 91, 94, 95, 97], "extra_str": 71, "param_count": 75, "pbound": 75, "pfo_list": 76, "xmin": 76, "xmax": 76, "nstep": 76, "40": [76, 97], "n_to_plot": [76, 85], "x_rang": [77, 93, 95], "named_respons": 77, "max_tim": 78, "replace_with": 81, "insert_aft": 81, "affin": [85, 89, 92, 98], "usag": 85, "gcd": 85, "dl": 85, "indir": 85, "dir": 85, "param": [85, 95], "dropout": 85, "ema": 85, "momentum": 85, "train_frac": 85, "total_branch_length": 85, "test": [85, 87, 99], "random_se": 85, "overwrit": 85, "dont": 85, "directori": 85, "fraction": [85, 98], "8": [85, 91, 94, 95, 97, 99, 100], "tell": 85, "hold": 85, "out": [85, 92], "choic": 85, "fast": 85, "real": 85, "properli": 85, "cap": 85, "150": 85, "trial": 85, "subprocess": 85, "n_seq": 85, "n_trial": 85, "max": [85, 98], "tri": 85, "n_max_tri": 85, "time_to_sampling_valu": 85, "time_to_sampling_rang": 85, "simu": [85, 97], "simu_bundle_s": 85, "min": [85, 92, 98], "carry_cap": 85, "death_valu": 85, "xscale_valu": 85, "xshift_valu": 85, "yscale_valu": 85, "xscale_rang": 85, "xshift_rang": 85, "yscale_rang": 85, "initial_birth_rate_rang": 85, "multipli": [85, 98], "mutability_multipli": 85, "n_sub_proc": 85, "itrial_start": 85, "70": [85, 97], "51": [85, 97], "retri": 85, "due": 85, "either": 85, "onc": 85, "300": [85, 92, 98, 100], "involv": 85, "ton": 85, "churn": 85, "veri": 85, "suggest": 85, "shouldn": 85, "least": 85, "68": [85, 91, 97], "script": 85, "partwai": 85, "memori": 85, "proper": 85, "rerun": 85, "merg": [85, 97], "quickli": 85, "successfulli": 85, "quick": 85, "put": [86, 101], "citat": [86, 101], "somedai": [86, 101], "environ": 87, "setup": [87, 90, 101], "pythonnousersit": 87, "isol": 87, "exist": 87, "system": 87, "micromamba": 87, "conda": [87, 101], "forg": 87, "9": [87, 90, 91, 93, 95, 96, 97, 98, 99], "instal": [87, 89, 101], "pip": 87, "pyqt5": 87, "arm": 87, "mac": 87, "pyqt": 87, "command": 87, "lint": 87, "_build": 87, "deploi": 87, "workflow": 87, "push": 87, "freeli": 89, "matsengrp": [89, 100], "cite": [89, 101], "replai": 89, "nn": 89, "util": [89, 92, 93, 95, 96, 99], "develop": 90, "interim": 90, "pypi": [90, 101], "import": [91, 92, 93, 95, 96, 97, 98, 99, 100], "matplotlib": [91, 92, 95, 96, 97, 100], "pyplot": [91, 92, 95, 96, 97, 100], "plt": [91, 92, 95, 96, 97, 100], "ll": 91, "tempor": 91, "exp": [91, 98], "\u03c6": 91, "linspac": [91, 92, 95], "figsiz": [91, 92], "label": [91, 92, 95], "xlabel": [91, 92, 96], "ylabel": [91, 92, 96], "birth_rat": 91, "death_rat": 91, "mutation_r": 91, "nbval_ignore_output": [91, 92], "x_grid": [91, 92], "arang": [91, 92, 96], "axvlin": [91, 92], "k": [91, 92, 100], "linestyl": [91, 92], "alpha": [91, 92, 94, 95, 98, 100], "fill_between": [91, 92], "lightgrei": 91, "neffect": [91, 92], "ylim": [91, 92, 99], "legend": [91, 92, 95], "rng": [91, 92], "default_rng": [91, 92, 98], "time_to_sampl": 91, "succeed": [91, 92], "flush": [91, 92], "12": [91, 95, 97, 98, 99, 101], "61": [91, 97], "17": [91, 93, 95, 97], "158": 91, "nbval_skip": [91, 92], "approxim": 91, "37": [91, 93, 97, 100], "19": [91, 97, 101], "11": [91, 97, 98, 99], "67": [91, 97], "14": [91, 97, 98], "16": [91, 97, 98], "25": [91, 94, 97], "18": [91, 97], "21": [91, 97], "55": [91, 97], "22": [91, 97], "23": [91, 97], "28": [91, 97], "24": [91, 97], "34": [91, 97], "26": [91, 97], "27": [91, 97], "29": [91, 97], "36": [91, 97], "47": [91, 97], "31": [91, 97], "84": [91, 97], "32": [91, 97, 100], "33": [91, 97], "57": [91, 95, 97], "231": 91, "experi": 92, "bind": 92, "assert": [92, 98], "grei": 92, "3710": 92, "histori": 92, "t_grid": 92, "n_t": 92, "axhlin": 92, "3670410000000002": 92, "branch_vertical_margin": 92, "show_leaf_nam": 92, "show_scal": 92, "open": [92, 97], "nwk": 92, "fp": 92, "jax_enable_x64": [93, 95, 96], "deliber": [93, 95, 96], "lot": [93, 95, 96], "bug": [93, 95, 96], "hide": [93, 95, 96], "scenario": [93, 95, 96], "true_paramet": [93, 95, 96], "plot_respons": [93, 95], "_prune": [93, 95, 96], "elif": [93, 95], "obtain": [93, 95, 96], "success": [93, 95, 96], "38": [93, 97], "230": 93, "5527925": 93, "float64": [93, 95], "weak_typ": 93, "scipyminimizeinfo": 93, "fun_val": 93, "223": 93, "65669084": 93, "statu": 93, "iter_num": 93, "9733255825455766": 93, "538441660208583": 93, "4196465099635436": 93, "0852267618100127": 93, "tidyvers": 94, "1mattach": 94, "22m": 94, "32m": [94, 97], "39m": [94, 97], "34mggplot2": 94, "34mpurrr": 94, "34mtibbl": 94, "34mdplyr": 94, "34mtidyr": 94, "34mstringr": 94, "34mreadr": 94, "34mforcat": 94, "1mconflict": 94, "tidyverse_conflict": 94, "31m": [94, 97], "32mfilter": 94, "34mstat": 94, "filter": 94, "32mlag": 94, "lag": 94, "geweke_test": 94, "sigma": [94, 98], "sim": 94, "propos": 94, "lognorm": [94, 95], "sd": 94, "read_csv": 94, "geweke_sampl": 94, "select": [94, 98], "pivot_long": 94, "names_to": 94, "values_to": 94, "1m": 94, "22mnew": 94, "36m": [94, 97], "1mrow": 94, "34m4001": 94, "1mcolumn": 94, "34m5": 94, "1mdelimit": 94, "31mchr": 94, "32mdbl": 94, "36m\u2139": 94, "spec": 94, "show_col_typ": 94, "quiet": 94, "messag": 94, "repr": 94, "height": 94, "mcmc": 94, "ggplot": [94, 98, 99, 100], "ae": [94, 98, 99, 100], "geom_lin": 94, "facet_wrap": [94, 99], "var": 94, "theme_grai": 94, "base_s": 94, "group_bi": 94, "arrang": 94, "summaris": 94, "ess": 94, "coda": 94, "effectives": 94, "grouped_df": 94, "parametermethodess": 94, "lt": 94, "chr": 94, "gt": 94, "dbl": 94, "birth_responsemc": 94, "2000": [94, 95], "00000": 94, "birth_responsemcmc": 94, "39": [94, 97], "40159": 94, "death_responsemc": 94, "death_responsemcmc": 94, "44402": 94, "after_stat": [94, 98, 100], "fill": [94, 98, 100], "geom_histogram": [94, 98, 99, 100], "geom_dens": [94, 98], "stat_bin": 94, "bin": 94, "pick": 94, "better": 94, "binwidth": [94, 97, 99, 100], "norm": [95, 100], "functool": 95, "partial": 95, "seaborn": [95, 97, 100], "sn": [95, 97, 100], "mh_tour": 95, "131": 95, "247": 95, "66666666666666": 95, "111": 95, "83333333333333": 95, "mcmc_config": 95, "loc": 95, "death_rate_valu": 95, "log_prior": 95, "logpdf": 95, "proposal_gener": 95, "rv": 95, "proposal_log_dens": 95, "prop": 95, "cur": 95, "prior_sampl": 95, "log_likelihood_bas": 95, "trigger": 95, "1383": 95, "03523618": 95, "birth_param": 95, "posterior_sampl": 95, "diagnost": 95, "num_sampl": 95, "initial_valu": 95, "fig": [95, 100], "ax": [95, 100], "subplot": [95, 100], "set_figwidth": 95, "set_figheight": 95, "enumer": 95, "lineplot": 95, "set_titl": 95, "diag": 95, "zip": [95, 98, 100], "acceptance_ratio": 95, "65": [95, 97], "72": [95, 97, 99], "89999999999999": 95, "x_arrai": 95, "linewidth": [95, 100], "red": 95, "set_xlabel": [95, 100], "set_ylabel": [95, 100], "set_xlim": 95, "set_ylim": 95, "round": 95, "997": 95, "969": 95, "988": 95, "755": 95, "59": [95, 97], "266": 95, "042": 95, "histplot": [95, 97], "tqdm": 96, "let": 96, "164": 96, "magnitud": 96, "log_lik": 96, "truth": [96, 97], "_flatten": 96, "search_spac": 96, "product": 96, "xsc": 96, "xsh": 96, "ysc": 96, "ysh": 96, "1250": 96, "00": [96, 97], "05it": 96, "scatter": [96, 100], "vstack": 96, "_init": 96, "pickl": 97, "pd": [97, 98, 99, 100], "rb": 97, "sublist": 97, "idx": 97, "train_idx": 97, "test_idx": 97, "train_sampl": 97, "test_sampl": 97, "param_to_predict": 97, "metal": 97, "devic": 97, "appl": 97, "m1": 97, "pro": 97, "systemmemori": 97, "gb": 97, "maxcaches": 97, "69m": 97, "5102": 97, "0587": 97, "0712": 97, "1062": 97, "34m": 97, "0385": 97, "37m": 97, "0479": 97, "30m": 97, "0710": 97, "33m": 97, "0475": 97, "0566": 97, "35m": 97, "0463": 97, "0468": 97, "0465": 97, "0433": 97, "0400": 97, "0462": 97, "0407": 97, "0375": 97, "0346": 97, "0404": 97, "0396": 97, "0335": 97, "0427": 97, "0351": 97, "0393": 97, "0359": 97, "0330": 97, "0360": 97, "0386": 97, "38m": 97, "0355": 97, "41m": 97, "0345": 97, "0341": 97, "0307": 97, "0308": 97, "35": [97, 100], "0300": 97, "0312": 97, "0294": 97, "0241": 97, "0284": 97, "41": 97, "0244": 97, "42": 97, "29m": 97, "0262": 97, "43": [97, 98, 99, 100], "0226": 97, "44": 97, "0225": 97, "45": 97, "0197": 97, "46": 97, "0265": 97, "0214": 97, "48": 97, "0181": 97, "49": 97, "28m": 97, "0159": 97, "0169": 97, "0176": 97, "52": 97, "53": 97, "0167": 97, "54": 97, "0143": 97, "0127": 97, "56": 97, "0133": 97, "0138": 97, "58": 97, "0136": 97, "0089": 97, "60": 97, "0137": 97, "0121": 97, "62": 97, "0106": 97, "63": 97, "0094": 97, "64": 97, "0116": 97, "0128": 97, "66": 97, "0118": 97, "0081": 97, "0114": 97, "0086": 97, "0078": 97, "71": 97, "0090": 97, "0087": 97, "73": [97, 99], "0079": 97, "74": [97, 99], "0075": 97, "75": [97, 99], "0084": 97, "76": [97, 99], "0071": 97, "77": [97, 99], "0068": 97, "78": [97, 99], "0088": 97, "79": 97, "0056": 97, "80": 97, "81": 97, "0065": 97, "82": 97, "0059": 97, "83": 97, "0050": 97, "85": 97, "0077": 97, "87": 97, "0045": 97, "88": 97, "89": 97, "0044": 97, "90": 97, "0057": 97, "91": 97, "92": 97, "93": 97, "0039": 97, "94": 97, "0048": 97, "95": 97, "0055": 97, "96": 97, "0046": 97, "97": 97, "0036": 97, "98": 97, "0040": 97, "0054": 97, "2023": 97, "02": 97, "953067": 97, "tsl": 97, "platform": 97, "profile_util": 97, "cpu_util": 97, "cc": 97, "128": 97, "cpu": 97, "frequenc": 97, "hz": 97, "df": 97, "hue": 97, "025": 97, "reproduct": 98, "selector": [98, 100], "log_": 98, "increas": 98, "m_": 98, "maxsign": 98, "growthrat": 98, "theta_": 98, "signal": 98, "competit": [98, 100], "cutoff": 98, "norm1": 98, "norm2": 98, "norm_sign": 98, "norm3": 98, "though": 98, "threestepselector": [98, 100], "simple_prolifer": [98, 100], "fivemermut": [98, 100], "dmsselector": [98, 100], "cell_div_balanced_prolifer": [98, 100], "dmsphenotyp": [98, 99, 100], "seqio": [98, 99, 100], "plotnin": [98, 99, 100], "xlim": [98, 99], "median": 98, "ipython": [98, 100], "fasta_path": [98, 99, 100], "gcreplay_sampl": [98, 99, 100], "gctree_pr1": [98, 99], "lb": 98, "kd_recalc": 98, "seq_record": [98, 99, 100], "pars": [98, 99, 100], "mult_seq": 98, "mult_kd": 98, "1160": 98, "raw": [98, 99, 100], "cggnaive_sit": [98, 99, 100], "delta_log10_kd": [98, 99, 100], "delta_express": [98, 100], "threenormselector": [98, 100], "total_t_cell_help": [98, 100], "550": 98, "kd_list": 98, "fivemer_mut": [98, 100], "mutability_csv": [98, 100], "substitution_csv": [98, 100], "uniform_mut": [98, 100], "saniti": 98, "prolifer": [98, 100], "simpl": [98, 100], "test_nod": 98, "aaa": 98, "descendant_seq": 98, "test_node_simpl": 98, "simple_descendant_seq": 98, "alive_leav": 98, "tree_rend": [98, 100], "200": [98, 99, 100], "num_expected_descend": 98, "1100": 98, "descendant_kd": 98, "fit_sum": 98, "cat": 98, "simulated_descend": 98, "all_kd": 98, "kd_df": 98, "categori": 98, "7153522909717275e": 98, "817783359026082e": 98, "367487565772558e": 98, "2684547652542707e": 98, "5923808200515968e": 98, "592358135503944e": 98, "875520203018669e": 98, "360077936159021e": 98, "358520865954112e": 98, "166662883041017e": 98, "07": 98, "1666626471889303e": 98, "alyssa": [98, 99], "miniconda3": [98, 99], "env": [98, 99], "gcdyn_39": [98, 99], "lib": [98, 99], "python3": [98, 99], "324": 98, "plotninewarn": [98, 99], "stat_dens": 98, "105": 98, "finit": 98, "8762819381077": 98, "compet": 98, "midpoint_compet": 98, "unnorm_sign": 98, "math": [98, 100], "els": 98, "competencies_df": 98, "norm2_sigmoid": 98, "geom_point": [98, 99], "8762850285303": 98, "8762818663277": 98, "comparison": 98, "dms_alive_leav": 98, "dms_selector": [98, 100], "dms_fit": 98, "dms_descendant_seq": 98, "desc": 98, "dms_descendant_kd": 98, "dms_all_kd": 98, "dms_kd_df": 98, "6801919833067778e": 98, "2084752293443781e": 98, "191": 98, "8762819389724": 98, "dms_phenotyp": 99, "lp": 99, "fitness_df": [99, 100], "ggtitl": 99, "antigen_bound_frac": 99, "sequence_kd": 99, "seq_kd": 99, "antigen_bound_df": 99, "facet": 99, "371": 99, "futurewarn": 99, "frame": 99, "concat": 99, "401": 99, "8783282393516": 99, "8783282270058": 99, "8783282424826": 99, "gaggtgcagcttcaggagtcaggacctagcctcgtgaaaccttctc": 99, "019846e": 99, "797376e": 99, "203513e": 99, "136458e": 99, "152404e": 99, "887426e": 99, "685297e": 99, "984258e": 99, "130994e": 99, "617107e": 99, "313718": 99, "012742": 99, "495087": 99, "682905": 99, "014162": 99, "954222": 99, "049559": 99, "000191": 99, "043412": 99, "673147": 99, "014124": 99, "924757": 99, "663036": 99, "014085": 99, "896668": 99, "640366": 99, "013998": 99, "841225": 99, "680330": 99, "014152": 99, "946205": 99, "688118": 99, "014182": 99, "971022": 99, "663682": 99, "014088": 99, "898392": 99, "648821": 99, "014031": 99, "860799": 99, "linfit": 99, "linfit_fitness_df": 99, "8783284626101": 99, "test_cell_div": 99, "cell_div": 99, "8783251480414": 99, "uniform_fitness_df": 99, "8783252416702": 99, "binary_prolifer": 100, "five_seq": 100, "dms_cell_div_selector": 100, "n0": 100, "nmax": 100, "enforce_timescal": 100, "uniform_selector": 100, "uniformselector": 100, "look": 100, "trajectori": 100, "mc": 100, "symlognorm": 100, "attrfac": 100, "nodestyl": 100, "circlefac": 100, "gaggtgcagcttcaggagtcaggacctagcctcgtgaaaccttctcagactctgtccctcacctgttctgtcactggcgactccatcaccagtggttactggaactggatccggaaattcccagggaataaacttgagtacatggggtatataagctacagtggtaccacttactacaatccatctctcaaaagtcgaatctccatcactcgagacacatccaagaaccagtactacctgcagttgcattctgtgactgctgaggacacagccacatattactgtgcaagggacttcgatgtctggggcgcagggaccacggtcaccgtctcctcagacattgtgatgactcagtctcaaaaattcatgtccacatcagtaggagacagggtcagcgtcacctgcaaggccagtcagaatgtgggtacaaatgtaggctggtatcaacagaaaccagggcaatctcctaaagcactgatttactcggcatcgtacagatacagtggagtccctgatcgcttcacaggcagtggatctgggacagatttcactctcaccatcagcaatgtgcagtctgaagacttggcagagtatttctgtcaacaatataacaactatcctctcacgttcggctcggggactaacctagaaataaaa": 100, "kd_val": 100, "seq_to_kd": 100, "layout_kd": 100, "add_face_to_nod": 100, "terminated_styl": 100, "fgcolor": 100, "darkr": 100, "layout_fn": 100, "fitness_method": 100, "gcreplai": 100, "blob": 100, "analysi": 100, "ipynb": 100, "sim_df": 100, "linthresh": 100, "vmin": 100, "vmax": 100, "cmap": 100, "viridi": 100, "alive_descend": 100, "node_phenotyp": 100, "getattr": 100, "parent_phenotyp": 100, "lc": 100, "linecollect": 100, "zorder": 100, "add_collect": 100, "edgecolor": 100, "seq_to_fit": 100, "all_tfh": 100, "all_i": 100, "i_val": 100, "help_df": 100, "cycle_numb": 100, "gaggtgcagcttcaggagtcaggacctagcctcgtgaaaccttctcagactctgtccctcacctgttctgtcactggcgactccatcaccagtggttactggaactggatccggaaattcccagggaataaacttgagtacatggggtacataagctacagtggtagcacttactacaatccatctctcaaaagtcgaatctccatcactcgagacacagccaagaaccagcactacctgcagttgaattctgtgactagtgaggacacaaccacatattactgtgcaagggagttcgatgtctggggcgcagggaccacggtcaccgtctcctcagacattgtgatgactcagtctcaaaaattcatgtccacatcagtaggagacagggtcagcgtcacctgcaaggccagtcagaatgtgggcactaatatagcctggtatcaacagaaaccagggcaatctcctaaagcactgatttactcggcatcctacaggtacagtggagtccctgttcgtttcacaggcagtggatctgggacagatttcactctcaccatcagcaatgtgcagtctgaagacttggcagagtatttctgtcagcaatataacaggtatcctctcacgttcggctcggggactaaggtagaaataaaa": 100, "layout_term": 100, "locat": 101, "rst": 101}, "objects": {"experiments": [[0, 0, 0, "-", "replay"]], "experiments.replay": [[1, 1, 1, "", "CHAIN_2_START_IDX"], [2, 1, 1, "", "NAIVE_SEQUENCE"], [3, 2, 1, "", "dms"], [4, 2, 1, "", "mutability"], [5, 2, 1, "", "substitution"]], "gcdyn": [[6, 0, 0, "-", "bdms"], [9, 0, 0, "-", "encode"], [19, 0, 0, "-", "fitness"], [21, 0, 0, "-", "gpmap"], [25, 0, 0, "-", "models"], [31, 0, 0, "-", "mutators"], [41, 0, 0, "-", "nn"], [45, 0, 0, "-", "poisson"], [58, 0, 0, "-", "utils"]], "gcdyn.bdms": [[7, 3, 1, "", "TreeNode"], [8, 2, 1, "", "sample_trees"]], "gcdyn.bdms.TreeNode": [[7, 4, 1, "", "__add__"], [7, 4, 1, "", "add_child"], [7, 4, 1, "", "add_face"], [7, 4, 1, "", "add_feature"], [7, 4, 1, "", "add_features"], [7, 4, 1, "", "add_sister"], [7, 4, 1, "", "check_monophyly"], [7, 5, 1, "", "children"], [7, 4, 1, "", "compare"], [7, 4, 1, "", "convert_to_ultrametric"], [7, 4, 1, "", "cophenetic_matrix"], [7, 4, 1, "", "copy"], [7, 4, 1, "", "del_feature"], [7, 4, 1, "", "delete"], [7, 4, 1, "", "describe"], [7, 4, 1, "", "detach"], [7, 5, 1, "", "dist"], [7, 6, 1, "", "event"], [7, 4, 1, "", "evolve"], [7, 4, 1, "", "expand_polytomies"], [7, 4, 1, "", "from_parent_child_table"], [7, 4, 1, "", "from_skbio"], [7, 4, 1, "", "get_ancestors"], [7, 4, 1, "", "get_ascii"], [7, 4, 1, "", "get_cached_content"], [7, 4, 1, "", "get_children"], [7, 4, 1, "", "get_closest_leaf"], [7, 4, 1, "", "get_common_ancestor"], [7, 4, 1, "", "get_descendants"], [7, 4, 1, "", "get_distance"], [7, 4, 1, "", "get_edges"], [7, 4, 1, "", "get_farthest_leaf"], [7, 4, 1, "", "get_farthest_node"], [7, 4, 1, "", "get_leaf_names"], [7, 4, 1, "", "get_leaves"], [7, 4, 1, "", "get_leaves_by_name"], [7, 4, 1, "", "get_midpoint_outgroup"], [7, 4, 1, "", "get_monophyletic"], [7, 4, 1, "", "get_sisters"], [7, 4, 1, "", "get_topology_id"], [7, 4, 1, "", "get_tree_root"], [7, 5, 1, "", "img_style"], [7, 4, 1, "", "is_leaf"], [7, 4, 1, "", "is_root"], [7, 4, 1, "", "iter_ancestors"], [7, 4, 1, "", "iter_descendants"], [7, 4, 1, "", "iter_edges"], [7, 4, 1, "", "iter_leaf_names"], [7, 4, 1, "", "iter_leaves"], [7, 4, 1, "", "iter_prepostorder"], [7, 4, 1, "", "iter_search_nodes"], [7, 4, 1, "", "ladderize"], [7, 6, 1, "", "n_mutations"], [7, 4, 1, "", "populate"], [7, 4, 1, "", "prune"], [7, 4, 1, "", "remove_child"], [7, 4, 1, "", "remove_mutation_events"], [7, 4, 1, "", "remove_sister"], [7, 4, 1, "", "render"], [7, 4, 1, "", "resolve_polytomy"], [7, 4, 1, "", "robinson_foulds"], [7, 4, 1, "", "sample_survivors"], [7, 4, 1, "", "search_nodes"], [7, 4, 1, "", "set_outgroup"], [7, 4, 1, "", "set_style"], [7, 4, 1, "", "show"], [7, 4, 1, "", "slice"], [7, 4, 1, "", "sort_descendants"], [7, 4, 1, "", "standardize"], [7, 5, 1, "", "support"], [7, 4, 1, "", "swap_children"], [7, 6, 1, "", "t"], [7, 4, 1, "", "traverse"], [7, 4, 1, "", "unroot"], [7, 5, 1, "", "up"], [7, 4, 1, "", "write"]], "gcdyn.encode": [[10, 2, 1, "", "encode_tree"], [11, 2, 1, "", "encode_trees"], [12, 2, 1, "", "pad_trees"], [13, 2, 1, "", "read_trees"], [14, 2, 1, "", "scale_tree"], [15, 2, 1, "", "simfn"], [16, 2, 1, "", "trivialize_encodings"], [17, 2, 1, "", "write_training_files"], [18, 2, 1, "", "write_trees"]], "gcdyn.fitness": [[20, 3, 1, "", "Fitness"]], "gcdyn.fitness.Fitness": [[20, 4, 1, "", "cell_divisions_from_tfh_linear"], [20, 4, 1, "", "linear_fitness"], [20, 4, 1, "", "normalized_fitness_df"], [20, 4, 1, "", "sigmoidal_fitness"], [20, 4, 1, "", "uniform_fitness"]], "gcdyn.gpmap": [[22, 3, 1, "", "AdditiveGPMap"], [23, 3, 1, "", "ConstantGPMap"], [24, 3, 1, "", "GPMap"]], "gcdyn.gpmap.AdditiveGPMap": [[22, 4, 1, "", "__call__"]], "gcdyn.gpmap.ConstantGPMap": [[23, 4, 1, "", "__call__"]], "gcdyn.gpmap.GPMap": [[24, 4, 1, "", "__call__"]], "gcdyn.models": [[26, 3, 1, "", "BirthDeathModel"], [27, 2, 1, "", "naive_log_likelihood"], [28, 2, 1, "", "stadler_appx_log_likelihood"], [29, 2, 1, "", "stadler_full_log_likelihood"], [30, 2, 1, "", "stadler_full_log_likelihood_scipy"]], "gcdyn.models.BirthDeathModel": [[26, 4, 1, "", "fit"], [26, 4, 1, "", "log_likelihood"]], "gcdyn.mutators": [[32, 3, 1, "", "AttrMutator"], [33, 3, 1, "", "ContextMutator"], [34, 3, 1, "", "DiscreteMutator"], [35, 3, 1, "", "GaussianMutator"], [36, 3, 1, "", "KdeMutator"], [37, 3, 1, "", "Mutator"], [38, 3, 1, "", "SequenceMutator"], [39, 3, 1, "", "SequencePhenotypeMutator"], [40, 3, 1, "", "UniformMutator"]], "gcdyn.mutators.AttrMutator": [[32, 4, 1, "", "cleanup"], [32, 4, 1, "", "logprob"], [32, 4, 1, "", "mutate"], [32, 5, 1, "", "node_attrs"], [32, 4, 1, "", "prob"]], "gcdyn.mutators.ContextMutator": [[33, 4, 1, "", "cleanup"], [33, 4, 1, "", "logprob"], [33, 4, 1, "", "mutate"], [33, 5, 1, "", "node_attrs"], [33, 4, 1, "", "prob"]], "gcdyn.mutators.DiscreteMutator": [[34, 4, 1, "", "cleanup"], [34, 4, 1, "", "logprob"], [34, 4, 1, "", "mutate"], [34, 5, 1, "", "node_attrs"], [34, 4, 1, "", "prob"]], "gcdyn.mutators.GaussianMutator": [[35, 4, 1, "", "cleanup"], [35, 4, 1, "", "logprob"], [35, 4, 1, "", "mutate"], [35, 5, 1, "", "node_attrs"], [35, 4, 1, "", "prob"]], "gcdyn.mutators.KdeMutator": [[36, 4, 1, "", "cleanup"], [36, 4, 1, "", "logprob"], [36, 4, 1, "", "mutate"], [36, 5, 1, "", "node_attrs"], [36, 4, 1, "", "prob"]], "gcdyn.mutators.Mutator": [[37, 4, 1, "", "cleanup"], [37, 4, 1, "", "logprob"], [37, 4, 1, "", "mutate"], [37, 5, 1, "", "node_attrs"]], "gcdyn.mutators.SequenceMutator": [[38, 4, 1, "", "cleanup"], [38, 4, 1, "", "logprob"], [38, 4, 1, "", "mutate"], [38, 5, 1, "", "node_attrs"], [38, 4, 1, "", "prob"]], "gcdyn.mutators.SequencePhenotypeMutator": [[39, 4, 1, "", "cleanup"], [39, 4, 1, "", "logprob"], [39, 4, 1, "", "mutate"], [39, 5, 1, "", "node_attrs"], [39, 4, 1, "", "prob"]], "gcdyn.mutators.UniformMutator": [[40, 4, 1, "", "cleanup"], [40, 4, 1, "", "logprob"], [40, 4, 1, "", "mutate"], [40, 5, 1, "", "node_attrs"], [40, 4, 1, "", "prob"]], "gcdyn.nn": [[42, 3, 1, "", "BundleMeanLayer"], [43, 3, 1, "", "Callback"], [44, 3, 1, "", "NeuralNetworkModel"]], "gcdyn.nn.BundleMeanLayer": [[42, 4, 1, "", "__call__"], [42, 5, 1, "", "activity_regularizer"], [42, 4, 1, "", "add_loss"], [42, 4, 1, "", "add_metric"], [42, 4, 1, "", "add_update"], [42, 4, 1, "", "add_variable"], [42, 4, 1, "", "add_weight"], [42, 4, 1, "", "build"], [42, 4, 1, "", "build_from_config"], [42, 4, 1, "", "call"], [42, 5, 1, "", "compute_dtype"], [42, 4, 1, "", "compute_mask"], [42, 4, 1, "", "compute_output_shape"], [42, 4, 1, "", "compute_output_signature"], [42, 4, 1, "", "count_params"], [42, 5, 1, "", "dtype"], [42, 5, 1, "", "dtype_policy"], [42, 5, 1, "", "dynamic"], [42, 4, 1, "", "finalize_state"], [42, 4, 1, "", "from_config"], [42, 4, 1, "", "get_build_config"], [42, 4, 1, "", "get_config"], [42, 4, 1, "", "get_input_at"], [42, 4, 1, "", "get_input_mask_at"], [42, 4, 1, "", "get_input_shape_at"], [42, 4, 1, "", "get_output_at"], [42, 4, 1, "", "get_output_mask_at"], [42, 4, 1, "", "get_output_shape_at"], [42, 4, 1, "", "get_weights"], [42, 5, 1, "", "inbound_nodes"], [42, 5, 1, "", "input"], [42, 5, 1, "", "input_mask"], [42, 5, 1, "", "input_shape"], [42, 5, 1, "", "input_spec"], [42, 4, 1, "", "load_own_variables"], [42, 5, 1, "", "losses"], [42, 5, 1, "", "metrics"], [42, 5, 1, "", "name"], [42, 5, 1, "", "name_scope"], [42, 5, 1, "", "non_trainable_variables"], [42, 5, 1, "", "non_trainable_weights"], [42, 5, 1, "", "outbound_nodes"], [42, 5, 1, "", "output"], [42, 5, 1, "", "output_mask"], [42, 5, 1, "", "output_shape"], [42, 4, 1, "", "save_own_variables"], [42, 4, 1, "", "set_weights"], [42, 5, 1, "", "submodules"], [42, 5, 1, "", "supports_masking"], [42, 5, 1, "", "trainable_variables"], [42, 5, 1, "", "trainable_weights"], [42, 5, 1, "", "variable_dtype"], [42, 5, 1, "", "variables"], [42, 5, 1, "", "weights"], [42, 4, 1, "", "with_name_scope"]], "gcdyn.nn.Callback": [[43, 4, 1, "", "on_batch_begin"], [43, 4, 1, "", "on_batch_end"], [43, 4, 1, "", "on_epoch_begin"], [43, 4, 1, "", "on_epoch_end"], [43, 4, 1, "", "on_predict_batch_begin"], [43, 4, 1, "", "on_predict_batch_end"], [43, 4, 1, "", "on_predict_begin"], [43, 4, 1, "", "on_predict_end"], [43, 4, 1, "", "on_test_batch_begin"], [43, 4, 1, "", "on_test_batch_end"], [43, 4, 1, "", "on_test_begin"], [43, 4, 1, "", "on_test_end"], [43, 4, 1, "", "on_train_batch_begin"], [43, 4, 1, "", "on_train_batch_end"], [43, 4, 1, "", "on_train_begin"], [43, 4, 1, "", "on_train_end"]], "gcdyn.nn.NeuralNetworkModel": [[44, 4, 1, "", "fit"], [44, 4, 1, "", "predict"]], "gcdyn.poisson": [[46, 3, 1, "", "ConstantResponse"], [47, 3, 1, "", "ExponentialResponse"], [48, 3, 1, "", "HomogeneousResponse"], [49, 3, 1, "", "ModulatedPhenotypeResponse"], [50, 3, 1, "", "ModulatedRateResponse"], [51, 3, 1, "", "PhenotypeResponse"], [52, 3, 1, "", "PhenotypeTimeResponse"], [53, 3, 1, "", "Response"], [54, 3, 1, "", "SequenceContextMutationResponse"], [55, 3, 1, "", "SigmoidResponse"], [56, 3, 1, "", "SoftReluResponse"], [57, 2, 1, "", "set_backend"]], "gcdyn.poisson.ConstantResponse": [[46, 4, 1, "", "__call__"], [46, 4, 1, "", "cleanup"], [46, 4, 1, "", "waiting_time_logsf"], [46, 4, 1, "", "waiting_time_rv"], [46, 4, 1, "gcdyn.poisson.ConstantResponse.", "\u039b"], [46, 4, 1, "gcdyn.poisson.ConstantResponse._inv", "\u039b_inv"], [46, 4, 1, "id0", "\u03bb"], [46, 4, 1, "gcdyn.poisson.ConstantResponse._homogeneous", "\u03bb_homogeneous"], [46, 4, 1, "gcdyn.poisson.ConstantResponse._phenotype", "\u03bb_phenotype"]], "gcdyn.poisson.ExponentialResponse": [[47, 4, 1, "", "__call__"], [47, 4, 1, "", "cleanup"], [47, 4, 1, "", "waiting_time_logsf"], [47, 4, 1, "", "waiting_time_rv"], [47, 4, 1, "gcdyn.poisson.ExponentialResponse.", "\u039b"], [47, 4, 1, "gcdyn.poisson.ExponentialResponse._inv", "\u039b_inv"], [47, 4, 1, "id0", "\u03bb"], [47, 4, 1, "gcdyn.poisson.ExponentialResponse._homogeneous", "\u03bb_homogeneous"], [47, 4, 1, "gcdyn.poisson.ExponentialResponse._phenotype", "\u03bb_phenotype"]], "gcdyn.poisson.HomogeneousResponse": [[48, 4, 1, "", "__call__"], [48, 4, 1, "", "cleanup"], [48, 4, 1, "", "waiting_time_logsf"], [48, 4, 1, "", "waiting_time_rv"], [48, 4, 1, "id0", "\u039b"], [48, 4, 1, "gcdyn.poisson.HomogeneousResponse._inv", "\u039b_inv"], [48, 4, 1, "gcdyn.poisson.HomogeneousResponse.", "\u03bb"], [48, 4, 1, "gcdyn.poisson.HomogeneousResponse._homogeneous", "\u03bb_homogeneous"]], "gcdyn.poisson.ModulatedPhenotypeResponse": [[49, 4, 1, "", "__call__"], [49, 4, 1, "", "cleanup"], [49, 4, 1, "", "waiting_time_logsf"], [49, 4, 1, "", "waiting_time_rv"], [49, 4, 1, "gcdyn.poisson.ModulatedPhenotypeResponse.", "\u039b"], [49, 4, 1, "gcdyn.poisson.ModulatedPhenotypeResponse._inv", "\u039b_inv"], [49, 4, 1, "id0", "\u03bb"], [49, 4, 1, "gcdyn.poisson.ModulatedPhenotypeResponse._phenotype_time", "\u03bb_phenotype_time"]], "gcdyn.poisson.ModulatedRateResponse": [[50, 4, 1, "", "__call__"], [50, 4, 1, "", "cleanup"], [50, 4, 1, "", "waiting_time_logsf"], [50, 4, 1, "", "waiting_time_rv"], [50, 4, 1, "gcdyn.poisson.ModulatedRateResponse.", "\u039b"], [50, 4, 1, "gcdyn.poisson.ModulatedRateResponse._inv", "\u039b_inv"], [50, 4, 1, "id0", "\u03bb"], [50, 4, 1, "gcdyn.poisson.ModulatedRateResponse._phenotype_time", "\u03bb_phenotype_time"]], "gcdyn.poisson.PhenotypeResponse": [[51, 4, 1, "", "__call__"], [51, 4, 1, "", "cleanup"], [51, 4, 1, "", "waiting_time_logsf"], [51, 4, 1, "", "waiting_time_rv"], [51, 4, 1, "gcdyn.poisson.PhenotypeResponse.", "\u039b"], [51, 4, 1, "gcdyn.poisson.PhenotypeResponse._inv", "\u039b_inv"], [51, 4, 1, "id0", "\u03bb"], [51, 4, 1, "gcdyn.poisson.PhenotypeResponse._homogeneous", "\u03bb_homogeneous"], [51, 4, 1, "gcdyn.poisson.PhenotypeResponse._phenotype", "\u03bb_phenotype"]], "gcdyn.poisson.PhenotypeTimeResponse": [[52, 4, 1, "", "__call__"], [52, 4, 1, "", "cleanup"], [52, 4, 1, "", "waiting_time_logsf"], [52, 4, 1, "", "waiting_time_rv"], [52, 4, 1, "id0", "\u039b"], [52, 4, 1, "gcdyn.poisson.PhenotypeTimeResponse._inv", "\u039b_inv"], [52, 4, 1, "gcdyn.poisson.PhenotypeTimeResponse.", "\u03bb"], [52, 4, 1, "gcdyn.poisson.PhenotypeTimeResponse._phenotype_time", "\u03bb_phenotype_time"]], "gcdyn.poisson.Response": [[53, 4, 1, "", "__call__"], [53, 4, 1, "", "cleanup"], [53, 4, 1, "", "waiting_time_logsf"], [53, 4, 1, "", "waiting_time_rv"], [53, 4, 1, "id0", "\u039b"], [53, 4, 1, "gcdyn.poisson.Response._inv", "\u039b_inv"], [53, 4, 1, "gcdyn.poisson.Response.", "\u03bb"]], "gcdyn.poisson.SequenceContextMutationResponse": [[54, 4, 1, "", "__call__"], [54, 4, 1, "", "cleanup"], [54, 4, 1, "", "waiting_time_logsf"], [54, 4, 1, "", "waiting_time_rv"], [54, 4, 1, "gcdyn.poisson.SequenceContextMutationResponse.", "\u039b"], [54, 4, 1, "gcdyn.poisson.SequenceContextMutationResponse._inv", "\u039b_inv"], [54, 4, 1, "id0", "\u03bb"], [54, 4, 1, "gcdyn.poisson.SequenceContextMutationResponse._homogeneous", "\u03bb_homogeneous"]], "gcdyn.poisson.SigmoidResponse": [[55, 4, 1, "", "__call__"], [55, 4, 1, "", "cleanup"], [55, 4, 1, "", "waiting_time_logsf"], [55, 4, 1, "", "waiting_time_rv"], [55, 4, 1, "gcdyn.poisson.SigmoidResponse.", "\u039b"], [55, 4, 1, "gcdyn.poisson.SigmoidResponse._inv", "\u039b_inv"], [55, 4, 1, "id0", "\u03bb"], [55, 4, 1, "gcdyn.poisson.SigmoidResponse._homogeneous", "\u03bb_homogeneous"], [55, 4, 1, "gcdyn.poisson.SigmoidResponse._phenotype", "\u03bb_phenotype"]], "gcdyn.poisson.SoftReluResponse": [[56, 4, 1, "", "__call__"], [56, 4, 1, "", "cleanup"], [56, 4, 1, "", "waiting_time_logsf"], [56, 4, 1, "", "waiting_time_rv"], [56, 4, 1, "gcdyn.poisson.SoftReluResponse.", "\u039b"], [56, 4, 1, "gcdyn.poisson.SoftReluResponse._inv", "\u039b_inv"], [56, 4, 1, "id0", "\u03bb"], [56, 4, 1, "gcdyn.poisson.SoftReluResponse._homogeneous", "\u03bb_homogeneous"], [56, 4, 1, "gcdyn.poisson.SoftReluResponse._phenotype", "\u03bb_phenotype"]], "gcdyn.utils": [[59, 2, 1, "", "addfn"], [60, 2, 1, "", "arglist_imatches"], [61, 2, 1, "", "arglist_index"], [62, 2, 1, "", "color"], [63, 2, 1, "", "color_mutants"], [64, 2, 1, "", "insert_in_arglist"], [65, 2, 1, "", "is_in_arglist"], [66, 2, 1, "", "isclose"], [67, 2, 1, "", "ladderize_tree"], [68, 2, 1, "", "limit_procs"], [69, 2, 1, "", "make_dl_plots"], [70, 2, 1, "", "make_html"], [71, 2, 1, "", "memory_usage_fraction"], [72, 2, 1, "", "mpl_init"], [73, 2, 1, "", "node_contexts"], [74, 2, 1, "", "padded_fivemer_contexts_of_paired_sequences"], [75, 2, 1, "", "plot_chosen_params"], [76, 2, 1, "", "plot_phenotype_response"], [77, 2, 1, "", "plot_responses"], [78, 2, 1, "", "plot_tree_slices"], [79, 2, 1, "", "random_transition_matrix"], [80, 2, 1, "", "remove_from_arglist"], [81, 2, 1, "", "replace_in_arglist"], [82, 2, 1, "", "simple_fivemer_contexts"], [83, 2, 1, "", "write_leaf_sequences_to_fasta"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:property", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"experi": [0, 1, 2, 3, 4, 5, 89], "replai": [0, 1, 2, 3, 4, 5, 92], "chain_2_start_idx": 1, "naive_sequ": 2, "dm": 3, "mutabl": 4, "substitut": 5, "gcdyn": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89], "bdm": [6, 7, 8], "birth": [6, 95], "death": [6, 95], "mutat": [6, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91], "sampl": [6, 95], "process": [6, 91], "simul": [6, 91, 92, 93], "treenod": 7, "sample_tre": 8, "encod": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "encode_tre": [10, 11], "pad_tre": 12, "read_tre": 13, "scale_tre": 14, "simfn": 15, "trivialize_encod": 16, "write_training_fil": 17, "write_tre": 18, "fit": [19, 20], "gpmap": [21, 22, 23, 24], "genotyp": 21, "phenotyp": [21, 91], "map": 21, "additivegpmap": 22, "constantgpmap": 23, "model": [25, 26, 27, 28, 29, 30, 91, 92, 93, 95, 97], "birthdeathmodel": 26, "naive_log_likelihood": 27, "stadler_appx_log_likelihood": 28, "stadler_full_log_likelihood": 29, "stadler_full_log_likelihood_scipi": 30, "attrmut": 32, "contextmut": 33, "discretemut": 34, "gaussianmut": 35, "kdemut": 36, "sequencemut": 38, "sequencephenotypemut": 39, "uniformmut": 40, "nn": [41, 42, 43, 44], "bundlemeanlay": 42, "callback": 43, "neuralnetworkmodel": 44, "poisson": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "constantrespons": 46, "exponentialrespons": 47, "homogeneousrespons": 48, "modulatedphenotyperespons": 49, "modulatedraterespons": 50, "phenotyperespons": 51, "phenotypetimerespons": 52, "respons": [53, 91], "sequencecontextmutationrespons": 54, "sigmoidrespons": 55, "softrelurespons": 56, "set_backend": 57, "util": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "addfn": 59, "arglist_imatch": 60, "arglist_index": 61, "color": 62, "color_mut": 63, "insert_in_arglist": 64, "is_in_arglist": 65, "isclos": 66, "ladderize_tre": 67, "limit_proc": 68, "make_dl_plot": 69, "make_html": 70, "memory_usage_fract": 71, "mpl_init": 72, "node_context": 73, "padded_fivemer_contexts_of_paired_sequ": 74, "plot_chosen_param": 75, "plot_phenotype_respons": 76, "plot_respons": 77, "plot_tree_slic": 78, "random_transition_matrix": 79, "remove_from_arglist": 80, "replace_in_arglist": 81, "simple_fivemer_context": 82, "write_leaf_sequences_to_fasta": 83, "modul": [84, 88, 91], "name": 85, "argument": 85, "cite": 86, "todo": [86, 90, 101], "develop": [87, 89], "tool": [87, 89], "document": 89, "user": 89, "guid": 89, "tutori": 89, "command": 89, "line": 89, "api": 89, "subpackag": 89, "indic": 89, "tabl": 89, "instal": 90, "pip": 90, "conda": 90, "inhomogen": 91, "paramet": [91, 92, 93], "function": 91, "rate": [91, 93], "germin": 92, "center": 92, "demo": 93, "py": 93, "set": [93, 95, 97], "up": [93, 95], "truth": [93, 95], "some": 93, "tree": [93, 95], "comput": 93, "likelihood": [93, 95], "maximum": 93, "estim": 93, "posterior": 95, "infer": 95, "configur": 95, "prior": 95, "propos": 95, "run": 95, "mcmc": 95, "traceplot": 95, "mean": 95, "assess": 96, "mle": 96, "converg": 96, "train": 97, "test": 97, "split": 97, "distribut": 97, "predict": 97, "To": 101, "do": 101, "list": 101}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"experiments.replay": [[0, "module-experiments.replay"]], "experiments.replay.CHAIN_2_START_IDX": [[1, "experiments-replay-chain-2-start-idx"]], "experiments.replay.NAIVE_SEQUENCE": [[2, "experiments-replay-naive-sequence"]], "experiments.replay.dms": [[3, "experiments-replay-dms"]], "experiments.replay.mutability": [[4, "experiments-replay-mutability"]], "experiments.replay.substitution": [[5, "experiments-replay-substitution"]], "gcdyn.bdms": [[6, "module-gcdyn.bdms"]], "Birth-death-mutation-sampling (BDMS) process simulation": [[6, "birth-death-mutation-sampling-bdms-process-simulation"]], "gcdyn.bdms.TreeNode": [[7, "gcdyn-bdms-treenode"]], "gcdyn.bdms.sample_trees": [[8, "gcdyn-bdms-sample-trees"]], "gcdyn.encode": [[9, "module-gcdyn.encode"]], "gcdyn.encode.encode_tree": [[10, "gcdyn-encode-encode-tree"]], "gcdyn.encode.encode_trees": [[11, "gcdyn-encode-encode-trees"]], "gcdyn.encode.pad_trees": [[12, "gcdyn-encode-pad-trees"]], "gcdyn.encode.read_trees": [[13, "gcdyn-encode-read-trees"]], "gcdyn.encode.scale_tree": [[14, "gcdyn-encode-scale-tree"]], "gcdyn.encode.simfn": [[15, "gcdyn-encode-simfn"]], "gcdyn.encode.trivialize_encodings": [[16, "gcdyn-encode-trivialize-encodings"]], "gcdyn.encode.write_training_files": [[17, "gcdyn-encode-write-training-files"]], "gcdyn.encode.write_trees": [[18, "gcdyn-encode-write-trees"]], "gcdyn.fitness": [[19, "module-gcdyn.fitness"]], "gcdyn.fitness.Fitness": [[20, "gcdyn-fitness-fitness"]], "gcdyn.gpmap": [[21, "module-gcdyn.gpmap"]], "Genotype-phenotype map GPMap": [[21, "genotype-phenotype-map-gpmap"]], "gcdyn.gpmap.AdditiveGPMap": [[22, "gcdyn-gpmap-additivegpmap"]], "gcdyn.gpmap.ConstantGPMap": [[23, "gcdyn-gpmap-constantgpmap"]], "gcdyn.gpmap.GPMap": [[24, "gcdyn-gpmap-gpmap"]], "gcdyn.models": [[25, "module-gcdyn.models"]], "gcdyn.models.BirthDeathModel": [[26, "gcdyn-models-birthdeathmodel"]], "gcdyn.models.naive_log_likelihood": [[27, "gcdyn-models-naive-log-likelihood"]], "gcdyn.models.stadler_appx_log_likelihood": [[28, "gcdyn-models-stadler-appx-log-likelihood"]], "gcdyn.models.stadler_full_log_likelihood": [[29, "gcdyn-models-stadler-full-log-likelihood"]], "gcdyn.models.stadler_full_log_likelihood_scipy": [[30, "gcdyn-models-stadler-full-log-likelihood-scipy"]], "gcdyn.mutators": [[31, "module-gcdyn.mutators"]], "gcdyn.mutators.AttrMutator": [[32, "gcdyn-mutators-attrmutator"]], "gcdyn.mutators.ContextMutator": [[33, "gcdyn-mutators-contextmutator"]], "gcdyn.mutators.DiscreteMutator": [[34, "gcdyn-mutators-discretemutator"]], "gcdyn.mutators.GaussianMutator": [[35, "gcdyn-mutators-gaussianmutator"]], "gcdyn.mutators.KdeMutator": [[36, "gcdyn-mutators-kdemutator"]], "gcdyn.mutators.Mutator": [[37, "gcdyn-mutators-mutator"]], "gcdyn.mutators.SequenceMutator": [[38, "gcdyn-mutators-sequencemutator"]], "gcdyn.mutators.SequencePhenotypeMutator": [[39, "gcdyn-mutators-sequencephenotypemutator"]], "gcdyn.mutators.UniformMutator": [[40, "gcdyn-mutators-uniformmutator"]], "gcdyn.nn": [[41, "module-gcdyn.nn"]], "gcdyn.nn.BundleMeanLayer": [[42, "gcdyn-nn-bundlemeanlayer"]], "gcdyn.nn.Callback": [[43, "gcdyn-nn-callback"]], "gcdyn.nn.NeuralNetworkModel": [[44, "gcdyn-nn-neuralnetworkmodel"]], "gcdyn.poisson": [[45, "module-gcdyn.poisson"]], "gcdyn.poisson.ConstantResponse": [[46, "gcdyn-poisson-constantresponse"]], "gcdyn.poisson.ExponentialResponse": [[47, "gcdyn-poisson-exponentialresponse"]], "gcdyn.poisson.HomogeneousResponse": [[48, "gcdyn-poisson-homogeneousresponse"]], "gcdyn.poisson.ModulatedPhenotypeResponse": [[49, "gcdyn-poisson-modulatedphenotyperesponse"]], "gcdyn.poisson.ModulatedRateResponse": [[50, "gcdyn-poisson-modulatedrateresponse"]], "gcdyn.poisson.PhenotypeResponse": [[51, "gcdyn-poisson-phenotyperesponse"]], "gcdyn.poisson.PhenotypeTimeResponse": [[52, "gcdyn-poisson-phenotypetimeresponse"]], "gcdyn.poisson.Response": [[53, "gcdyn-poisson-response"]], "gcdyn.poisson.SequenceContextMutationResponse": [[54, "gcdyn-poisson-sequencecontextmutationresponse"]], "gcdyn.poisson.SigmoidResponse": [[55, "gcdyn-poisson-sigmoidresponse"]], "gcdyn.poisson.SoftReluResponse": [[56, "gcdyn-poisson-softreluresponse"]], "gcdyn.poisson.set_backend": [[57, "gcdyn-poisson-set-backend"]], "gcdyn.utils": [[58, "module-gcdyn.utils"]], "gcdyn.utils.addfn": [[59, "gcdyn-utils-addfn"]], "gcdyn.utils.arglist_imatches": [[60, "gcdyn-utils-arglist-imatches"]], "gcdyn.utils.arglist_index": [[61, "gcdyn-utils-arglist-index"]], "gcdyn.utils.color": [[62, "gcdyn-utils-color"]], "gcdyn.utils.color_mutants": [[63, "gcdyn-utils-color-mutants"]], "gcdyn.utils.insert_in_arglist": [[64, "gcdyn-utils-insert-in-arglist"]], "gcdyn.utils.is_in_arglist": [[65, "gcdyn-utils-is-in-arglist"]], "gcdyn.utils.isclose": [[66, "gcdyn-utils-isclose"]], "gcdyn.utils.ladderize_tree": [[67, "gcdyn-utils-ladderize-tree"]], "gcdyn.utils.limit_procs": [[68, "gcdyn-utils-limit-procs"]], "gcdyn.utils.make_dl_plots": [[69, "gcdyn-utils-make-dl-plots"]], "gcdyn.utils.make_html": [[70, "gcdyn-utils-make-html"]], "gcdyn.utils.memory_usage_fraction": [[71, "gcdyn-utils-memory-usage-fraction"]], "gcdyn.utils.mpl_init": [[72, "gcdyn-utils-mpl-init"]], "gcdyn.utils.node_contexts": [[73, "gcdyn-utils-node-contexts"]], "gcdyn.utils.padded_fivemer_contexts_of_paired_sequences": [[74, "gcdyn-utils-padded-fivemer-contexts-of-paired-sequences"]], "gcdyn.utils.plot_chosen_params": [[75, "gcdyn-utils-plot-chosen-params"]], "gcdyn.utils.plot_phenotype_response": [[76, "gcdyn-utils-plot-phenotype-response"]], "gcdyn.utils.plot_responses": [[77, "gcdyn-utils-plot-responses"]], "gcdyn.utils.plot_tree_slices": [[78, "gcdyn-utils-plot-tree-slices"]], "gcdyn.utils.random_transition_matrix": [[79, "gcdyn-utils-random-transition-matrix"]], "gcdyn.utils.remove_from_arglist": [[80, "gcdyn-utils-remove-from-arglist"]], "gcdyn.utils.replace_in_arglist": [[81, "gcdyn-utils-replace-in-arglist"]], "gcdyn.utils.simple_fivemer_contexts": [[82, "gcdyn-utils-simple-fivemer-contexts"]], "gcdyn.utils.write_leaf_sequences_to_fasta": [[83, "gcdyn-utils-write-leaf-sequences-to-fasta"]], "Modules": [[84, "modules"], [88, "modules"]], "Named Arguments": [[85, "named-arguments"], [85, "named-arguments"]], "Citing gcdyn": [[86, "citing-gcdyn"]], "Todo": [[86, "id1"], [90, "id1"], [90, "id2"], [101, null], [101, null], [101, null]], "Developer tools": [[87, "developer-tools"]], "gcdyn documentation": [[89, "gcdyn-documentation"]], "User Guide": [[89, null]], "Tutorials": [[89, null]], "Command line tools": [[89, null]], "API Documentation": [[89, null]], "Experiments subpackage": [[89, null]], "Developer Documentation": [[89, null]], "Indices and tables": [[89, "indices-and-tables"]], "Installation": [[90, "installation"]], "Pip": [[90, "pip"]], "Conda": [[90, "conda"]], "Inhomogeneous processes": [[91, "inhomogeneous-processes"]], "Phenotype-modulated model": [[91, "phenotype-modulated-model"]], "Parameters": [[91, "parameters"], [91, "id1"], [92, "parameters"]], "Response functions": [[91, "response-functions"], [91, "id2"]], "Mutator": [[91, "mutator"]], "Simulate": [[91, "simulate"], [91, "id3"], [92, "simulate"]], "Rate-modulated model": [[91, "rate-modulated-model"]], "Germinal center replay modeling": [[92, "germinal-center-replay-modeling"]], "Demo of models.py": [[93, "demo-of-models-py"]], "Set up truth": [[93, "set-up-truth"], [95, "set-up-truth"]], "Simulate some trees": [[93, "simulate-some-trees"]], "Computing likelihood": [[93, "computing-likelihood"]], "Maximum likelihood estimation of rate parameters": [[93, "maximum-likelihood-estimation-of-rate-parameters"]], "Posterior inference on a birth-death model": [[95, "posterior-inference-on-a-birth-death-model"]], "Sample trees": [[95, "sample-trees"]], "Configure priors and proposals": [[95, "configure-priors-and-proposals"]], "Configure likelihood": [[95, "configure-likelihood"]], "Run MCMC": [[95, "run-mcmc"]], "Traceplots": [[95, "traceplots"]], "Posterior samples and means": [[95, "posterior-samples-and-means"]], "Assessing MLE convergence": [[96, "assessing-mle-convergence"]], "Train-test split": [[97, "train-test-split"]], "Train model": [[97, "train-model"]], "Distribution of predictions on train set": [[97, "distribution-of-predictions-on-train-set"]], "Distribution of predictions on test set": [[97, "distribution-of-predictions-on-test-set"]], "To-do list": [[101, "to-do-list"]]}, "indexentries": {"chain_2_start_idx (in module experiments.replay)": [[0, "experiments.replay.CHAIN_2_START_IDX"], [1, "experiments.replay.CHAIN_2_START_IDX"]], "naive_sequence (in module experiments.replay)": [[0, "experiments.replay.NAIVE_SEQUENCE"], [2, "experiments.replay.NAIVE_SEQUENCE"]], "dms() (in module experiments.replay)": [[0, "experiments.replay.dms"], [3, "experiments.replay.dms"]], "experiments.replay": [[0, "module-experiments.replay"]], "module": [[0, "module-experiments.replay"], [6, "module-gcdyn.bdms"], [9, "module-gcdyn.encode"], [19, "module-gcdyn.fitness"], [21, "module-gcdyn.gpmap"], [25, "module-gcdyn.models"], [31, "module-gcdyn.mutators"], [41, "module-gcdyn.nn"], [45, "module-gcdyn.poisson"], [58, "module-gcdyn.utils"]], "mutability() (in module experiments.replay)": [[0, "experiments.replay.mutability"], [4, "experiments.replay.mutability"]], "substitution() (in module experiments.replay)": [[0, "experiments.replay.substitution"], [5, "experiments.replay.substitution"]], "treenode (class in gcdyn.bdms)": [[6, "gcdyn.bdms.TreeNode"], [7, "gcdyn.bdms.TreeNode"]], "event (gcdyn.bdms.treenode attribute)": [[6, "gcdyn.bdms.TreeNode.event"], [7, "gcdyn.bdms.TreeNode.event"]], "evolve() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.evolve"], [7, "gcdyn.bdms.TreeNode.evolve"]], "gcdyn.bdms": [[6, "module-gcdyn.bdms"]], "n_mutations (gcdyn.bdms.treenode attribute)": [[6, "gcdyn.bdms.TreeNode.n_mutations"], [7, "gcdyn.bdms.TreeNode.n_mutations"]], "prune() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.prune"], [7, "gcdyn.bdms.TreeNode.prune"]], "remove_mutation_events() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.remove_mutation_events"], [7, "gcdyn.bdms.TreeNode.remove_mutation_events"]], "render() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.render"], [7, "gcdyn.bdms.TreeNode.render"]], "sample_survivors() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.sample_survivors"], [7, "gcdyn.bdms.TreeNode.sample_survivors"]], "sample_trees() (in module gcdyn.bdms)": [[6, "gcdyn.bdms.sample_trees"], [8, "gcdyn.bdms.sample_trees"]], "slice() (gcdyn.bdms.treenode method)": [[6, "gcdyn.bdms.TreeNode.slice"], [7, "gcdyn.bdms.TreeNode.slice"]], "t (gcdyn.bdms.treenode attribute)": [[6, "gcdyn.bdms.TreeNode.t"], [7, "gcdyn.bdms.TreeNode.t"]], "__add__() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.__add__"]], "add_child() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.add_child"]], "add_face() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.add_face"]], "add_feature() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.add_feature"]], "add_features() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.add_features"]], "add_sister() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.add_sister"]], "check_monophyly() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.check_monophyly"]], "children (gcdyn.bdms.treenode property)": [[7, "gcdyn.bdms.TreeNode.children"]], "compare() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.compare"]], "convert_to_ultrametric() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.convert_to_ultrametric"]], "cophenetic_matrix() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.cophenetic_matrix"]], "copy() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.copy"]], "del_feature() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.del_feature"]], "delete() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.delete"]], "describe() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.describe"]], "detach() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.detach"]], "dist (gcdyn.bdms.treenode property)": [[7, "gcdyn.bdms.TreeNode.dist"]], "expand_polytomies() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.expand_polytomies"]], "from_parent_child_table() (gcdyn.bdms.treenode static method)": [[7, "gcdyn.bdms.TreeNode.from_parent_child_table"]], "from_skbio() (gcdyn.bdms.treenode static method)": [[7, "gcdyn.bdms.TreeNode.from_skbio"]], "get_ancestors() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_ancestors"]], "get_ascii() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_ascii"]], "get_cached_content() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_cached_content"]], "get_children() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_children"]], "get_closest_leaf() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_closest_leaf"]], "get_common_ancestor() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_common_ancestor"]], "get_descendants() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_descendants"]], "get_distance() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_distance"]], "get_edges() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_edges"]], "get_farthest_leaf() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_farthest_leaf"]], "get_farthest_node() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_farthest_node"]], "get_leaf_names() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_leaf_names"]], "get_leaves() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_leaves"]], "get_leaves_by_name() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_leaves_by_name"]], "get_midpoint_outgroup() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_midpoint_outgroup"]], "get_monophyletic() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_monophyletic"]], "get_sisters() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_sisters"]], "get_topology_id() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_topology_id"]], "get_tree_root() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.get_tree_root"]], "img_style (gcdyn.bdms.treenode property)": [[7, "gcdyn.bdms.TreeNode.img_style"]], "is_leaf() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.is_leaf"]], "is_root() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.is_root"]], "iter_ancestors() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_ancestors"]], "iter_descendants() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_descendants"]], "iter_edges() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_edges"]], "iter_leaf_names() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_leaf_names"]], "iter_leaves() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_leaves"]], "iter_prepostorder() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_prepostorder"]], "iter_search_nodes() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.iter_search_nodes"]], "ladderize() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.ladderize"]], "populate() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.populate"]], "remove_child() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.remove_child"]], "remove_sister() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.remove_sister"]], "resolve_polytomy() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.resolve_polytomy"]], "robinson_foulds() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.robinson_foulds"]], "search_nodes() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.search_nodes"]], "set_outgroup() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.set_outgroup"]], "set_style() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.set_style"]], "show() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.show"]], "sort_descendants() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.sort_descendants"]], "standardize() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.standardize"]], "support (gcdyn.bdms.treenode property)": [[7, "gcdyn.bdms.TreeNode.support"]], "swap_children() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.swap_children"]], "traverse() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.traverse"]], "unroot() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.unroot"]], "up (gcdyn.bdms.treenode property)": [[7, "gcdyn.bdms.TreeNode.up"]], "write() (gcdyn.bdms.treenode method)": [[7, "gcdyn.bdms.TreeNode.write"]], "encode_tree() (in module gcdyn.encode)": [[9, "gcdyn.encode.encode_tree"], [10, "gcdyn.encode.encode_tree"]], "encode_trees() (in module gcdyn.encode)": [[9, "gcdyn.encode.encode_trees"], [11, "gcdyn.encode.encode_trees"]], "gcdyn.encode": [[9, "module-gcdyn.encode"]], "pad_trees() (in module gcdyn.encode)": [[9, "gcdyn.encode.pad_trees"], [12, "gcdyn.encode.pad_trees"]], "scale_tree() (in module gcdyn.encode)": [[9, "gcdyn.encode.scale_tree"], [14, "gcdyn.encode.scale_tree"]], "simfn() (in module gcdyn.encode)": [[9, "gcdyn.encode.simfn"], [15, "gcdyn.encode.simfn"]], "trivialize_encodings() (in module gcdyn.encode)": [[9, "gcdyn.encode.trivialize_encodings"], [16, "gcdyn.encode.trivialize_encodings"]], "write_training_files() (in module gcdyn.encode)": [[9, "gcdyn.encode.write_training_files"], [17, "gcdyn.encode.write_training_files"]], "read_trees() (in module gcdyn.encode)": [[13, "gcdyn.encode.read_trees"]], "write_trees() (in module gcdyn.encode)": [[18, "gcdyn.encode.write_trees"]], "fitness (class in gcdyn.fitness)": [[19, "gcdyn.fitness.Fitness"], [20, "gcdyn.fitness.Fitness"]], "cell_divisions_from_tfh_linear() (gcdyn.fitness.fitness method)": [[19, "gcdyn.fitness.Fitness.cell_divisions_from_tfh_linear"], [20, "gcdyn.fitness.Fitness.cell_divisions_from_tfh_linear"]], "gcdyn.fitness": [[19, "module-gcdyn.fitness"]], "linear_fitness() (gcdyn.fitness.fitness method)": [[19, "gcdyn.fitness.Fitness.linear_fitness"], [20, "gcdyn.fitness.Fitness.linear_fitness"]], "normalized_fitness_df() (gcdyn.fitness.fitness method)": [[19, "gcdyn.fitness.Fitness.normalized_fitness_df"], [20, "gcdyn.fitness.Fitness.normalized_fitness_df"]], "sigmoidal_fitness() (gcdyn.fitness.fitness method)": [[19, "gcdyn.fitness.Fitness.sigmoidal_fitness"], [20, "gcdyn.fitness.Fitness.sigmoidal_fitness"]], "uniform_fitness() (gcdyn.fitness.fitness method)": [[19, "gcdyn.fitness.Fitness.uniform_fitness"], [20, "gcdyn.fitness.Fitness.uniform_fitness"]], "additivegpmap (class in gcdyn.gpmap)": [[21, "gcdyn.gpmap.AdditiveGPMap"], [22, "gcdyn.gpmap.AdditiveGPMap"]], "constantgpmap (class in gcdyn.gpmap)": [[21, "gcdyn.gpmap.ConstantGPMap"], [23, "gcdyn.gpmap.ConstantGPMap"]], "gpmap (class in gcdyn.gpmap)": [[21, "gcdyn.gpmap.GPMap"], [24, "gcdyn.gpmap.GPMap"]], "gcdyn.gpmap": [[21, "module-gcdyn.gpmap"]], "__call__() (gcdyn.gpmap.additivegpmap method)": [[22, "gcdyn.gpmap.AdditiveGPMap.__call__"]], "__call__() (gcdyn.gpmap.constantgpmap method)": [[23, "gcdyn.gpmap.ConstantGPMap.__call__"]], "__call__() (gcdyn.gpmap.gpmap method)": [[24, "gcdyn.gpmap.GPMap.__call__"]], "birthdeathmodel (class in gcdyn.models)": [[25, "gcdyn.models.BirthDeathModel"], [26, "gcdyn.models.BirthDeathModel"]], "fit() (gcdyn.models.birthdeathmodel method)": [[25, "gcdyn.models.BirthDeathModel.fit"], [26, "gcdyn.models.BirthDeathModel.fit"]], "gcdyn.models": [[25, "module-gcdyn.models"]], "log_likelihood() (gcdyn.models.birthdeathmodel method)": [[25, "gcdyn.models.BirthDeathModel.log_likelihood"], [26, "gcdyn.models.BirthDeathModel.log_likelihood"]], "naive_log_likelihood() (in module gcdyn.models)": [[25, "gcdyn.models.naive_log_likelihood"], [27, "gcdyn.models.naive_log_likelihood"]], "stadler_appx_log_likelihood() (in module gcdyn.models)": [[25, "gcdyn.models.stadler_appx_log_likelihood"], [28, "gcdyn.models.stadler_appx_log_likelihood"]], "stadler_full_log_likelihood() (in module gcdyn.models)": [[25, "gcdyn.models.stadler_full_log_likelihood"], [29, "gcdyn.models.stadler_full_log_likelihood"]], "stadler_full_log_likelihood_scipy() (in module gcdyn.models)": [[25, "gcdyn.models.stadler_full_log_likelihood_scipy"], [30, "gcdyn.models.stadler_full_log_likelihood_scipy"]], "attrmutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.AttrMutator"], [32, "gcdyn.mutators.AttrMutator"]], "contextmutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.ContextMutator"], [33, "gcdyn.mutators.ContextMutator"]], "discretemutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.DiscreteMutator"], [34, "gcdyn.mutators.DiscreteMutator"]], "gaussianmutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.GaussianMutator"], [35, "gcdyn.mutators.GaussianMutator"]], "kdemutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.KdeMutator"], [36, "gcdyn.mutators.KdeMutator"]], "mutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.Mutator"], [37, "gcdyn.mutators.Mutator"]], "sequencemutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.SequenceMutator"], [38, "gcdyn.mutators.SequenceMutator"]], "sequencephenotypemutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.SequencePhenotypeMutator"], [39, "gcdyn.mutators.SequencePhenotypeMutator"]], "uniformmutator (class in gcdyn.mutators)": [[31, "gcdyn.mutators.UniformMutator"], [40, "gcdyn.mutators.UniformMutator"]], "cleanup() (gcdyn.mutators.contextmutator method)": [[31, "gcdyn.mutators.ContextMutator.cleanup"], [33, "gcdyn.mutators.ContextMutator.cleanup"]], "cleanup() (gcdyn.mutators.mutator method)": [[31, "gcdyn.mutators.Mutator.cleanup"], [37, "gcdyn.mutators.Mutator.cleanup"]], "cleanup() (gcdyn.mutators.sequencephenotypemutator method)": [[31, "gcdyn.mutators.SequencePhenotypeMutator.cleanup"], [39, "gcdyn.mutators.SequencePhenotypeMutator.cleanup"]], "gcdyn.mutators": [[31, "module-gcdyn.mutators"]], "logprob() (gcdyn.mutators.attrmutator method)": [[31, "gcdyn.mutators.AttrMutator.logprob"], [32, "gcdyn.mutators.AttrMutator.logprob"]], "logprob() (gcdyn.mutators.mutator method)": [[31, "gcdyn.mutators.Mutator.logprob"], [37, "gcdyn.mutators.Mutator.logprob"]], "mutate() (gcdyn.mutators.contextmutator method)": [[31, "gcdyn.mutators.ContextMutator.mutate"], [33, "gcdyn.mutators.ContextMutator.mutate"]], "mutate() (gcdyn.mutators.discretemutator method)": [[31, "gcdyn.mutators.DiscreteMutator.mutate"], [34, "gcdyn.mutators.DiscreteMutator.mutate"]], "mutate() (gcdyn.mutators.gaussianmutator method)": [[31, "gcdyn.mutators.GaussianMutator.mutate"], [35, "gcdyn.mutators.GaussianMutator.mutate"]], "mutate() (gcdyn.mutators.kdemutator method)": [[31, "gcdyn.mutators.KdeMutator.mutate"], [36, "gcdyn.mutators.KdeMutator.mutate"]], "mutate() (gcdyn.mutators.mutator method)": [[31, "gcdyn.mutators.Mutator.mutate"], [37, "gcdyn.mutators.Mutator.mutate"]], "mutate() (gcdyn.mutators.sequencephenotypemutator method)": [[31, "gcdyn.mutators.SequencePhenotypeMutator.mutate"], [39, "gcdyn.mutators.SequencePhenotypeMutator.mutate"]], "mutate() (gcdyn.mutators.uniformmutator method)": [[31, "gcdyn.mutators.UniformMutator.mutate"], [40, "gcdyn.mutators.UniformMutator.mutate"]], "node_attrs (gcdyn.mutators.attrmutator property)": [[31, "gcdyn.mutators.AttrMutator.node_attrs"], [32, "gcdyn.mutators.AttrMutator.node_attrs"]], "node_attrs (gcdyn.mutators.contextmutator property)": [[31, "gcdyn.mutators.ContextMutator.node_attrs"], [33, "gcdyn.mutators.ContextMutator.node_attrs"]], "node_attrs (gcdyn.mutators.mutator property)": [[31, "gcdyn.mutators.Mutator.node_attrs"], [37, "gcdyn.mutators.Mutator.node_attrs"]], "node_attrs (gcdyn.mutators.sequencephenotypemutator property)": [[31, "gcdyn.mutators.SequencePhenotypeMutator.node_attrs"], [39, "gcdyn.mutators.SequencePhenotypeMutator.node_attrs"]], "prob() (gcdyn.mutators.attrmutator method)": [[31, "gcdyn.mutators.AttrMutator.prob"], [32, "gcdyn.mutators.AttrMutator.prob"]], "prob() (gcdyn.mutators.discretemutator method)": [[31, "gcdyn.mutators.DiscreteMutator.prob"], [34, "gcdyn.mutators.DiscreteMutator.prob"]], "prob() (gcdyn.mutators.gaussianmutator method)": [[31, "gcdyn.mutators.GaussianMutator.prob"], [35, "gcdyn.mutators.GaussianMutator.prob"]], "prob() (gcdyn.mutators.kdemutator method)": [[31, "gcdyn.mutators.KdeMutator.prob"], [36, "gcdyn.mutators.KdeMutator.prob"]], "prob() (gcdyn.mutators.sequencemutator method)": [[31, "gcdyn.mutators.SequenceMutator.prob"], [38, "gcdyn.mutators.SequenceMutator.prob"]], "prob() (gcdyn.mutators.sequencephenotypemutator method)": [[31, "gcdyn.mutators.SequencePhenotypeMutator.prob"], [39, "gcdyn.mutators.SequencePhenotypeMutator.prob"]], "cleanup() (gcdyn.mutators.attrmutator method)": [[32, "gcdyn.mutators.AttrMutator.cleanup"]], "mutate() (gcdyn.mutators.attrmutator method)": [[32, "gcdyn.mutators.AttrMutator.mutate"]], "logprob() (gcdyn.mutators.contextmutator method)": [[33, "gcdyn.mutators.ContextMutator.logprob"]], "prob() (gcdyn.mutators.contextmutator method)": [[33, "gcdyn.mutators.ContextMutator.prob"]], "cleanup() (gcdyn.mutators.discretemutator method)": [[34, "gcdyn.mutators.DiscreteMutator.cleanup"]], "logprob() (gcdyn.mutators.discretemutator method)": [[34, "gcdyn.mutators.DiscreteMutator.logprob"]], "node_attrs (gcdyn.mutators.discretemutator property)": [[34, "gcdyn.mutators.DiscreteMutator.node_attrs"]], "cleanup() (gcdyn.mutators.gaussianmutator method)": [[35, "gcdyn.mutators.GaussianMutator.cleanup"]], "logprob() (gcdyn.mutators.gaussianmutator method)": [[35, "gcdyn.mutators.GaussianMutator.logprob"]], "node_attrs (gcdyn.mutators.gaussianmutator property)": [[35, "gcdyn.mutators.GaussianMutator.node_attrs"]], "cleanup() (gcdyn.mutators.kdemutator method)": [[36, "gcdyn.mutators.KdeMutator.cleanup"]], "logprob() (gcdyn.mutators.kdemutator method)": [[36, "gcdyn.mutators.KdeMutator.logprob"]], "node_attrs (gcdyn.mutators.kdemutator property)": [[36, "gcdyn.mutators.KdeMutator.node_attrs"]], "cleanup() (gcdyn.mutators.sequencemutator method)": [[38, "gcdyn.mutators.SequenceMutator.cleanup"]], "logprob() (gcdyn.mutators.sequencemutator method)": [[38, "gcdyn.mutators.SequenceMutator.logprob"]], "mutate() (gcdyn.mutators.sequencemutator method)": [[38, "gcdyn.mutators.SequenceMutator.mutate"]], "node_attrs (gcdyn.mutators.sequencemutator property)": [[38, "gcdyn.mutators.SequenceMutator.node_attrs"]], "logprob() (gcdyn.mutators.sequencephenotypemutator method)": [[39, "gcdyn.mutators.SequencePhenotypeMutator.logprob"]], "cleanup() (gcdyn.mutators.uniformmutator method)": [[40, "gcdyn.mutators.UniformMutator.cleanup"]], "logprob() (gcdyn.mutators.uniformmutator method)": [[40, "gcdyn.mutators.UniformMutator.logprob"]], "node_attrs (gcdyn.mutators.uniformmutator property)": [[40, "gcdyn.mutators.UniformMutator.node_attrs"]], "prob() (gcdyn.mutators.uniformmutator method)": [[40, "gcdyn.mutators.UniformMutator.prob"]], "bundlemeanlayer (class in gcdyn.nn)": [[41, "gcdyn.nn.BundleMeanLayer"], [42, "gcdyn.nn.BundleMeanLayer"]], "callback (class in gcdyn.nn)": [[41, "gcdyn.nn.Callback"], [43, "gcdyn.nn.Callback"]], "neuralnetworkmodel (class in gcdyn.nn)": [[41, "gcdyn.nn.NeuralNetworkModel"], [44, "gcdyn.nn.NeuralNetworkModel"]], "call() (gcdyn.nn.bundlemeanlayer method)": [[41, "gcdyn.nn.BundleMeanLayer.call"], [42, "gcdyn.nn.BundleMeanLayer.call"]], "compute_output_shape() (gcdyn.nn.bundlemeanlayer method)": [[41, "gcdyn.nn.BundleMeanLayer.compute_output_shape"], [42, "gcdyn.nn.BundleMeanLayer.compute_output_shape"]], "fit() (gcdyn.nn.neuralnetworkmodel method)": [[41, "gcdyn.nn.NeuralNetworkModel.fit"], [44, "gcdyn.nn.NeuralNetworkModel.fit"]], "gcdyn.nn": [[41, "module-gcdyn.nn"]], "on_epoch_begin() (gcdyn.nn.callback method)": [[41, "gcdyn.nn.Callback.on_epoch_begin"], [43, "gcdyn.nn.Callback.on_epoch_begin"]], "on_epoch_end() (gcdyn.nn.callback method)": [[41, "gcdyn.nn.Callback.on_epoch_end"], [43, "gcdyn.nn.Callback.on_epoch_end"]], "on_train_begin() (gcdyn.nn.callback method)": [[41, "gcdyn.nn.Callback.on_train_begin"], [43, "gcdyn.nn.Callback.on_train_begin"]], "predict() (gcdyn.nn.neuralnetworkmodel method)": [[41, "gcdyn.nn.NeuralNetworkModel.predict"], [44, "gcdyn.nn.NeuralNetworkModel.predict"]], "__call__() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.__call__"]], "activity_regularizer (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.activity_regularizer"]], "add_loss() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.add_loss"]], "add_metric() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.add_metric"]], "add_update() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.add_update"]], "add_variable() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.add_variable"]], "add_weight() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.add_weight"]], "build() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.build"]], "build_from_config() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.build_from_config"]], "compute_dtype (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.compute_dtype"]], "compute_mask() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.compute_mask"]], "compute_output_signature() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.compute_output_signature"]], "count_params() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.count_params"]], "dtype (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.dtype"]], "dtype_policy (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.dtype_policy"]], "dynamic (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.dynamic"]], "finalize_state() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.finalize_state"]], "from_config() (gcdyn.nn.bundlemeanlayer class method)": [[42, "gcdyn.nn.BundleMeanLayer.from_config"]], "get_build_config() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_build_config"]], "get_config() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_config"]], "get_input_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_input_at"]], "get_input_mask_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_input_mask_at"]], "get_input_shape_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_input_shape_at"]], "get_output_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_output_at"]], "get_output_mask_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_output_mask_at"]], "get_output_shape_at() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_output_shape_at"]], "get_weights() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.get_weights"]], "inbound_nodes (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.inbound_nodes"]], "input (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.input"]], "input_mask (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.input_mask"]], "input_shape (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.input_shape"]], "input_spec (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.input_spec"]], "load_own_variables() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.load_own_variables"]], "losses (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.losses"]], "metrics (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.metrics"]], "name (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.name"]], "name_scope (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.name_scope"]], "non_trainable_variables (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.non_trainable_variables"]], "non_trainable_weights (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.non_trainable_weights"]], "outbound_nodes (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.outbound_nodes"]], "output (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.output"]], "output_mask (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.output_mask"]], "output_shape (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.output_shape"]], "save_own_variables() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.save_own_variables"]], "set_weights() (gcdyn.nn.bundlemeanlayer method)": [[42, "gcdyn.nn.BundleMeanLayer.set_weights"]], "submodules (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.submodules"]], "supports_masking (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.supports_masking"]], "trainable_variables (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.trainable_variables"]], "trainable_weights (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.trainable_weights"]], "variable_dtype (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.variable_dtype"]], "variables (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.variables"]], "weights (gcdyn.nn.bundlemeanlayer property)": [[42, "gcdyn.nn.BundleMeanLayer.weights"]], "with_name_scope() (gcdyn.nn.bundlemeanlayer class method)": [[42, "gcdyn.nn.BundleMeanLayer.with_name_scope"]], "on_batch_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_batch_begin"]], "on_batch_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_batch_end"]], "on_predict_batch_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_predict_batch_begin"]], "on_predict_batch_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_predict_batch_end"]], "on_predict_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_predict_begin"]], "on_predict_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_predict_end"]], "on_test_batch_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_test_batch_begin"]], "on_test_batch_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_test_batch_end"]], "on_test_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_test_begin"]], "on_test_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_test_end"]], "on_train_batch_begin() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_train_batch_begin"]], "on_train_batch_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_train_batch_end"]], "on_train_end() (gcdyn.nn.callback method)": [[43, "gcdyn.nn.Callback.on_train_end"]], "constantresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.ConstantResponse"], [46, "gcdyn.poisson.ConstantResponse"]], "exponentialresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.ExponentialResponse"], [47, "gcdyn.poisson.ExponentialResponse"]], "homogeneousresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.HomogeneousResponse"], [48, "gcdyn.poisson.HomogeneousResponse"]], "modulatedphenotyperesponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.ModulatedPhenotypeResponse"], [49, "gcdyn.poisson.ModulatedPhenotypeResponse"]], "modulatedrateresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.ModulatedRateResponse"], [50, "gcdyn.poisson.ModulatedRateResponse"]], "phenotyperesponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.PhenotypeResponse"], [51, "gcdyn.poisson.PhenotypeResponse"]], "phenotypetimeresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.PhenotypeTimeResponse"], [52, "gcdyn.poisson.PhenotypeTimeResponse"]], "response (class in gcdyn.poisson)": [[45, "gcdyn.poisson.Response"], [53, "gcdyn.poisson.Response"]], "sequencecontextmutationresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.SequenceContextMutationResponse"], [54, "gcdyn.poisson.SequenceContextMutationResponse"]], "sigmoidresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.SigmoidResponse"], [55, "gcdyn.poisson.SigmoidResponse"]], "softreluresponse (class in gcdyn.poisson)": [[45, "gcdyn.poisson.SoftReluResponse"], [56, "gcdyn.poisson.SoftReluResponse"]], "cleanup() (gcdyn.poisson.response method)": [[45, "gcdyn.poisson.Response.cleanup"], [53, "gcdyn.poisson.Response.cleanup"]], "cleanup() (gcdyn.poisson.sequencecontextmutationresponse method)": [[45, "gcdyn.poisson.SequenceContextMutationResponse.cleanup"], [54, "gcdyn.poisson.SequenceContextMutationResponse.cleanup"]], "gcdyn.poisson": [[45, "module-gcdyn.poisson"]], "waiting_time_logsf() (gcdyn.poisson.response method)": [[45, "gcdyn.poisson.Response.waiting_time_logsf"], [53, "gcdyn.poisson.Response.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.response method)": [[45, "gcdyn.poisson.Response.waiting_time_rv"], [53, "gcdyn.poisson.Response.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.homogeneousresponse method)": [[45, "id1"], [45, "gcdyn.poisson.HomogeneousResponse."], [48, "id0"], [48, "gcdyn.poisson.HomogeneousResponse."]], "\u03bb() (gcdyn.poisson.phenotypetimeresponse method)": [[45, "id2"], [45, "gcdyn.poisson.PhenotypeTimeResponse."], [52, "id0"], [52, "gcdyn.poisson.PhenotypeTimeResponse."]], "\u03bb() (gcdyn.poisson.response method)": [[45, "id0"], [45, "gcdyn.poisson.Response."], [53, "id0"], [53, "gcdyn.poisson.Response."]], "\u03bb_inv() (gcdyn.poisson.homogeneousresponse method)": [[45, "gcdyn.poisson.HomogeneousResponse._inv"], [48, "gcdyn.poisson.HomogeneousResponse._inv"]], "\u03bb_inv() (gcdyn.poisson.phenotypetimeresponse method)": [[45, "gcdyn.poisson.PhenotypeTimeResponse._inv"], [52, "gcdyn.poisson.PhenotypeTimeResponse._inv"]], "\u03bb_inv() (gcdyn.poisson.response method)": [[45, "gcdyn.poisson.Response._inv"], [53, "gcdyn.poisson.Response._inv"]], "\u03bb_homogeneous() (gcdyn.poisson.homogeneousresponse method)": [[45, "gcdyn.poisson.HomogeneousResponse._homogeneous"], [48, "gcdyn.poisson.HomogeneousResponse._homogeneous"]], "\u03bb_homogeneous() (gcdyn.poisson.phenotyperesponse method)": [[45, "gcdyn.poisson.PhenotypeResponse._homogeneous"], [51, "gcdyn.poisson.PhenotypeResponse._homogeneous"]], "\u03bb_homogeneous() (gcdyn.poisson.sequencecontextmutationresponse method)": [[45, "gcdyn.poisson.SequenceContextMutationResponse._homogeneous"], [54, "gcdyn.poisson.SequenceContextMutationResponse._homogeneous"]], "\u03bb_phenotype() (gcdyn.poisson.constantresponse method)": [[45, "gcdyn.poisson.ConstantResponse._phenotype"], [46, "gcdyn.poisson.ConstantResponse._phenotype"]], "\u03bb_phenotype() (gcdyn.poisson.exponentialresponse method)": [[45, "gcdyn.poisson.ExponentialResponse._phenotype"], [47, "gcdyn.poisson.ExponentialResponse._phenotype"]], "\u03bb_phenotype() (gcdyn.poisson.phenotyperesponse method)": [[45, "gcdyn.poisson.PhenotypeResponse._phenotype"], [51, "gcdyn.poisson.PhenotypeResponse._phenotype"]], "\u03bb_phenotype() (gcdyn.poisson.sigmoidresponse method)": [[45, "gcdyn.poisson.SigmoidResponse._phenotype"], [55, "gcdyn.poisson.SigmoidResponse._phenotype"]], "\u03bb_phenotype() (gcdyn.poisson.softreluresponse method)": [[45, "gcdyn.poisson.SoftReluResponse._phenotype"], [56, "gcdyn.poisson.SoftReluResponse._phenotype"]], "\u03bb_phenotype_time() (gcdyn.poisson.modulatedphenotyperesponse method)": [[45, "gcdyn.poisson.ModulatedPhenotypeResponse._phenotype_time"], [49, "gcdyn.poisson.ModulatedPhenotypeResponse._phenotype_time"]], "\u03bb_phenotype_time() (gcdyn.poisson.modulatedrateresponse method)": [[45, "gcdyn.poisson.ModulatedRateResponse._phenotype_time"], [50, "gcdyn.poisson.ModulatedRateResponse._phenotype_time"]], "\u03bb_phenotype_time() (gcdyn.poisson.phenotypetimeresponse method)": [[45, "gcdyn.poisson.PhenotypeTimeResponse._phenotype_time"], [52, "gcdyn.poisson.PhenotypeTimeResponse._phenotype_time"]], "__call__() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse.__call__"]], "cleanup() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse."], [46, "id0"]], "\u03bb_inv() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse._inv"]], "\u03bb_homogeneous() (gcdyn.poisson.constantresponse method)": [[46, "gcdyn.poisson.ConstantResponse._homogeneous"]], "__call__() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse.__call__"]], "cleanup() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse."], [47, "id0"]], "\u03bb_inv() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse._inv"]], "\u03bb_homogeneous() (gcdyn.poisson.exponentialresponse method)": [[47, "gcdyn.poisson.ExponentialResponse._homogeneous"]], "__call__() (gcdyn.poisson.homogeneousresponse method)": [[48, "gcdyn.poisson.HomogeneousResponse.__call__"]], "cleanup() (gcdyn.poisson.homogeneousresponse method)": [[48, "gcdyn.poisson.HomogeneousResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.homogeneousresponse method)": [[48, "gcdyn.poisson.HomogeneousResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.homogeneousresponse method)": [[48, "gcdyn.poisson.HomogeneousResponse.waiting_time_rv"]], "__call__() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse.__call__"]], "cleanup() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse."], [49, "id0"]], "\u03bb_inv() (gcdyn.poisson.modulatedphenotyperesponse method)": [[49, "gcdyn.poisson.ModulatedPhenotypeResponse._inv"]], "__call__() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse.__call__"]], "cleanup() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse."], [50, "id0"]], "\u03bb_inv() (gcdyn.poisson.modulatedrateresponse method)": [[50, "gcdyn.poisson.ModulatedRateResponse._inv"]], "__call__() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse.__call__"]], "cleanup() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse."], [51, "id0"]], "\u03bb_inv() (gcdyn.poisson.phenotyperesponse method)": [[51, "gcdyn.poisson.PhenotypeResponse._inv"]], "__call__() (gcdyn.poisson.phenotypetimeresponse method)": [[52, "gcdyn.poisson.PhenotypeTimeResponse.__call__"]], "cleanup() (gcdyn.poisson.phenotypetimeresponse method)": [[52, "gcdyn.poisson.PhenotypeTimeResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.phenotypetimeresponse method)": [[52, "gcdyn.poisson.PhenotypeTimeResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.phenotypetimeresponse method)": [[52, "gcdyn.poisson.PhenotypeTimeResponse.waiting_time_rv"]], "__call__() (gcdyn.poisson.response method)": [[53, "gcdyn.poisson.Response.__call__"]], "__call__() (gcdyn.poisson.sequencecontextmutationresponse method)": [[54, "gcdyn.poisson.SequenceContextMutationResponse.__call__"]], "waiting_time_logsf() (gcdyn.poisson.sequencecontextmutationresponse method)": [[54, "gcdyn.poisson.SequenceContextMutationResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.sequencecontextmutationresponse method)": [[54, "gcdyn.poisson.SequenceContextMutationResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.sequencecontextmutationresponse method)": [[54, "gcdyn.poisson.SequenceContextMutationResponse."], [54, "id0"]], "\u03bb_inv() (gcdyn.poisson.sequencecontextmutationresponse method)": [[54, "gcdyn.poisson.SequenceContextMutationResponse._inv"]], "__call__() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse.__call__"]], "cleanup() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse."], [55, "id0"]], "\u03bb_inv() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse._inv"]], "\u03bb_homogeneous() (gcdyn.poisson.sigmoidresponse method)": [[55, "gcdyn.poisson.SigmoidResponse._homogeneous"]], "__call__() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse.__call__"]], "cleanup() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse.cleanup"]], "waiting_time_logsf() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse.waiting_time_logsf"]], "waiting_time_rv() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse.waiting_time_rv"]], "\u03bb() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse."], [56, "id0"]], "\u03bb_inv() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse._inv"]], "\u03bb_homogeneous() (gcdyn.poisson.softreluresponse method)": [[56, "gcdyn.poisson.SoftReluResponse._homogeneous"]], "set_backend() (in module gcdyn.poisson)": [[57, "gcdyn.poisson.set_backend"]], "gcdyn.utils": [[58, "module-gcdyn.utils"]], "isclose() (in module gcdyn.utils)": [[58, "gcdyn.utils.isclose"], [66, "gcdyn.utils.isclose"]], "ladderize_tree() (in module gcdyn.utils)": [[58, "gcdyn.utils.ladderize_tree"], [67, "gcdyn.utils.ladderize_tree"]], "limit_procs() (in module gcdyn.utils)": [[58, "gcdyn.utils.limit_procs"], [68, "gcdyn.utils.limit_procs"]], "make_html() (in module gcdyn.utils)": [[58, "gcdyn.utils.make_html"], [70, "gcdyn.utils.make_html"]], "padded_fivemer_contexts_of_paired_sequences() (in module gcdyn.utils)": [[58, "gcdyn.utils.padded_fivemer_contexts_of_paired_sequences"], [74, "gcdyn.utils.padded_fivemer_contexts_of_paired_sequences"]], "simple_fivemer_contexts() (in module gcdyn.utils)": [[58, "gcdyn.utils.simple_fivemer_contexts"], [82, "gcdyn.utils.simple_fivemer_contexts"]], "write_leaf_sequences_to_fasta() (in module gcdyn.utils)": [[58, "gcdyn.utils.write_leaf_sequences_to_fasta"], [83, "gcdyn.utils.write_leaf_sequences_to_fasta"]], "addfn() (in module gcdyn.utils)": [[59, "gcdyn.utils.addfn"]], "arglist_imatches() (in module gcdyn.utils)": [[60, "gcdyn.utils.arglist_imatches"]], "arglist_index() (in module gcdyn.utils)": [[61, "gcdyn.utils.arglist_index"]], "color() (in module gcdyn.utils)": [[62, "gcdyn.utils.color"]], "color_mutants() (in module gcdyn.utils)": [[63, "gcdyn.utils.color_mutants"]], "insert_in_arglist() (in module gcdyn.utils)": [[64, "gcdyn.utils.insert_in_arglist"]], "is_in_arglist() (in module gcdyn.utils)": [[65, "gcdyn.utils.is_in_arglist"]], "make_dl_plots() (in module gcdyn.utils)": [[69, "gcdyn.utils.make_dl_plots"]], "memory_usage_fraction() (in module gcdyn.utils)": [[71, "gcdyn.utils.memory_usage_fraction"]], "mpl_init() (in module gcdyn.utils)": [[72, "gcdyn.utils.mpl_init"]], "node_contexts() (in module gcdyn.utils)": [[73, "gcdyn.utils.node_contexts"]], "plot_chosen_params() (in module gcdyn.utils)": [[75, "gcdyn.utils.plot_chosen_params"]], "plot_phenotype_response() (in module gcdyn.utils)": [[76, "gcdyn.utils.plot_phenotype_response"]], "plot_responses() (in module gcdyn.utils)": [[77, "gcdyn.utils.plot_responses"]], "plot_tree_slices() (in module gcdyn.utils)": [[78, "gcdyn.utils.plot_tree_slices"]], "random_transition_matrix() (in module gcdyn.utils)": [[79, "gcdyn.utils.random_transition_matrix"]], "remove_from_arglist() (in module gcdyn.utils)": [[80, "gcdyn.utils.remove_from_arglist"]], "replace_in_arglist() (in module gcdyn.utils)": [[81, "gcdyn.utils.replace_in_arglist"]]}})